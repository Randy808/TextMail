%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 16.0.2
%%For: (Randy) ()
%%Title: (Untitled-3.ai)
%%CreationDate: 4/27/2014 7:31 PM
%%Canvassize: 16383
%%BoundingBox: -1 -645 481 1
%%HiResBoundingBox: -0.5 -644.5 480.5 0.5
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: OpenSans
%%DocumentNeededFonts: OpenSans
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 240.5 -320.5 240.5 -320.5
%AI3_TileBox: -66 -716 546 76
%AI3_DocumentPreview: None
%AI5_ArtSize: 480 640
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 9
%AI8_OpenToView: -592 170 1 1581 884 18 0 0 50 117 0 0
%AI5_OpenViewLayers: 777767767
%%PageOrigin:152 -424
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.6
%AI7_Thumbnail: 96 128 8
%%BeginData: 23872 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45A87DA77DA77C7C57585858577C5858577C5858577C5858577C5858
%577C5858577C5858577C5858577C5858577C5858577C5858577C5858577C
%5858577C5858577C5858577C5858577C5858577C5858577C5858577C5858
%577C7C837DA77D83A87C7C58585158515851585758515857585158575851
%585758515857585158575851585758515857585158575851585758515857
%585158575851585758515857585158575851585758515857585158575851
%5857585158575851585158587C58AE83587C575857585758575857585758
%575857585758575857585758575857585758575857585758575857585758
%575857585758575857585758575857585758575857585758575857585758
%5758575857585758575857585758575857585883A87D582D585158515851
%585158515851585158515851585158515851585158515851585158515851
%585158515851585158515851585158515851585158515851585158515851
%5851585158515851585158515851585158515851585158515858FF835758
%5858577C5858577C5858577C5858577C5858577C5858577C5858577C5858
%577C5858577C5858577C5858577C5858577C5858577C5858577C5858577C
%5858577C5858577C5858577C5858577C5858577C5858577C5858577C5858
%577CAE585751585758515857585158575851585758515857585158575851
%585758515857585158575851585758515857585158575851585758515857
%585158575851585758515857585158575851585758515857585158575851
%5857585158575851CF7C5758575857585758575857585758575857585758
%575857585758575857585758575857585758575857585758575857585758
%575857585758575857585758575857585758575857585758575857585758
%5758575857585758575857585758A7515851585158515851585158515851
%585158515851585158515851585158515851585158515851585158515851
%585158515851585158515851585158515851585158515851585158515851
%585158515851585158515851585158515851582DA8585858577C5858577C
%5858577C5858577C5858577C5858577C5858577C5858577C5858577C5858
%577C5858577C5858577C5858577C5858577C5858577C5858577C5858577C
%5858577C5858577C5858577C5858577C5858577C5858577C5758A7515857
%585158575851585758515857585158575851585758515857585158575851
%585758515857585158575851585758515857585158575851585758515857
%585158575851585758515857585158575851585758515857585158575851
%5851A8585758575857585758575857585758575857585758575857585758
%575857585758575857585758575857585758575857585758575857585758
%575857585758575857585758575857585758575857585758575857585758
%5758575857585758A7515851585158515851585158515851585158515851
%585158515851585158515851585158515851585158515851585158515851
%585158515851585158515851585158515851585158515851585158515851
%585158515851585158515851582DA858577C5858577C5858577C5858577C
%5858577C5858577C5858577C5858577C5858577C5858577C5858577C5858
%577C5858577C5858577C5858577C5858577C5858577C5858577C5858577C
%5858577C585857585758577C5858577C58585758A7575851585758515857
%585158575851585758515857585158575851585758515857585158575851
%585758515857585158575851585758515857585158575851585758515857
%585158575851585758515857585158575851585758515857582DA8585758
%575857585758575857585758575857585758575857585758575857585758
%575857585758575857585758575857585758575857585758575857585758
%57585758575857585758575857585758578282827CA67C58575857585758
%575883515851585158515851585158515857585758575851585158515851
%585158515851585158515851585158515851585158515851585158575857
%5857585158515851585158515851585158515851585158515851587B5851
%585158515851582DA87C5858577C5858577C585857582D512D512D51517C
%5858577C5858577C5858577C5858577C5858577C5858577C5858577C5858
%577C57512D512D512D585858577C5858577C5858577C5858577C58585758
%57587C825758577C5858577C5758A751585758515857585158575851FD06
%F82D57585758515857585158575851585758515857585158575851585758
%515857585751FD06F8275857585158575851585758515857585158575851
%5857825158575851585758515851A858575857585758575857585858FD06
%F82D58575857585758575857585758575857585758575857585758575857
%58575857582DFD06F8515758575857585758575857585758575857585758
%5782585857585758575857585758A75158515851585158515851585727FD
%05F858515851585158515851585158515851585158515851585158515851
%5851585158515804FD04F827575851585158515851585158515851585158
%515851825758515851585158515851582DA858577C5858577C5858577C58
%585751F82726585858577C5858577C5858577C5858577C5858577C585857
%7C5858577C5858577C5858577C2727F82D5758577C5858577C5858577C58
%58577C5858577C57827C585758577C5858577C58585758A7575851585758
%515857585158515857585158575857585158575851585758515857585158
%575851585758515857585158575851585758515851585758515851585758
%515857585158575851585758515882825782587C51585758515857582DA8
%585758575857585758575857585758575857585758575857585758575857
%585758575857585758575857585758575857585758575857585758585857
%5857585758575857585758575857585758575857827C8258825858575857
%585758575883515851585158515851585158515851585158515851585158
%515851585158515851585158515851585158515851585158515851585158
%51585158515851585158515851585158515851585158515851582D585158
%2D5851585158515851582DA87C5858577C5858577C5858577C5858577C58
%58577C5858577C5858577C5858577C5858577C5858577C5858577C585857
%7C5858577C5858577C5858577C5858577C5858577C5858577C5858577C58
%58577C5858577C5858577C5858577C5758A7515857585158575851585758
%515857585158575851585758515857585158575851585758515857585158
%575851585758515857585158575851585758515857585158575851585758
%5158575851585758515857585158575851585758515851A8585758575857
%585758575857585758575857585758575857585758575857585758575857
%585758575857585758575857585758575857585758575857585758575857
%5857585758575851585758575857585758575857585758575857585758A7
%515851585158515851585158515851585158515851585158515851585158
%515851585158515851585158515851585158515851585158515851585158
%515851585158515851585782577C57585158515851585158515851585158
%515851582DA858577C5858577C5858577C5858577C5858577C5858577C58
%58577C5858577C5858577C5858577C5858577C5858577C5858577C585857
%7C5858577C5858577C5858577C585857827C827CA65858577C5858577C58
%58577C5858577C58585758A7575851585758515857585158575851585758
%515857585158575851585758515857585158575851585758515857585158
%575851585758515857585158575851585758515857585158517C57585758
%515857585158575851585758515857582DA8585758575857585758575857
%585758575857585758575857585758575857585758575857585758575857
%585758575857585758575857585758575857585758575857585758575851
%827C58575857585758575857585758575857585758575883515851585158
%515851585158515851585158515851585158515851585158515851585158
%515851585158515851585158515851585158515851585158515851585158
%5158515851587B5851585158515851585158515851585158515851582DA8
%7C5858577C5858577C5858577C5858577C5858577C5858577C5858577C58
%58577C5858577C5858577C5858577C5858577C5858577C5858577C585857
%7C5858577C5858577C58587C825758577C5858577C5858577C5858577C58
%58577C5758A7515857585158575851585758515857585158575851585758
%515857585158575851585758515857585158575851585758515857585158
%575851585758515857585158575851585782515851585158575851585758
%5158575851585758515851A8585758575857585758575857585758575851
%585758515857585158575851585758515857585158575851585758515857
%58515857585158575851585758575857585758575857825858577C575857
%5857585758575857585758575857585758A7515851585158515851585158
%515851585758515857585158575851585758515857585158575851585758
%5158575851585758515857585158575851585758515851585158517C7C82
%7C827B7C5158515851585158515851585158515851582DA858577C585857
%7C5858577C58585758A8FD2DFF7D585858577C5858577C5858577C585857
%7C5858577C5858577C5858577C58585758A7575851585758515857585158
%575858FFA8FD2CFFA82D5857585158575851585158515857585158575851
%58575851585758515857582DA858575857585758575857585758577CFFAE
%A8FF83FFA8FFA8FFCFFFFFFFAEFFA8FFFFFFA8FD19FFA858575857585758
%575857585758575857585758575857585758575857585758575883515851
%585158515851585158515858FFFD04A883FD04A8FFA8FFFD07A8CFFD19FF
%AE5158515851585158515851585158515851585158515851585158515851
%5851582DA87C5858577C5858577C5858577C577CFFFFA8FFA8FFA8FFA8FF
%A8AEA8CFA8FFA8FFA8CFA8FD19FFA858577C5858577C5858577C5858577C
%5858577C5858577C5858577C5858577C5758A75158575851585758515857
%58515858FD09FFA8FFFFFFA8FFA8A8A8FD1CFFAE51585158575851585758
%5158575851585758515857585158575851585758515851A8585758575857
%585758575857585183FD2EFFA85857585758575857585758575857585758
%57585758575857585758575857585758A751585158515851585158515851
%5758FD2EFFA82D5851585158515851585158515851585158515851585158
%51585158515851582DA858577C5858577C5858577C58585783FD2EFFA858
%5758577C5858577C5858577C5858577C5858577C5858577C5858577C5858
%5758A7575851585758515857585158575758FD2EFFA85158575851585758
%5158575851585758515857585158575851585758515857582DA858575857
%585758575857585758577CFD2EFFA8585758575857585758575857585758
%575857585758575857585758575857585758835158515851585158515851
%58515858FD2EFFAE51585158515851585158515851585158515851585158
%515851585158515851582DA87C5858577C5858577C5858577C577CFD2EFF
%A858577C5858577C5858577C5858577C5858577C5858577C5858577C5858
%577C5758A7515857585158575851585758515858FD2EFFAE515851585758
%515857585158575851585758515857585158575851585758515851A85857
%58575857585758575857585183FD2EFFA858575857585758575857585758
%5758575857585758575857585758575857585758A7515851585158515851
%585158515758FD2EFFA82D58515851585158515851585158515851585158
%5158515851585158515851582DA858577C5858577C5858577C58585783FD
%2EFFA8585758577C5858577C5858577C5858577C5858577C5858577C5858
%577C58585758A7575851585758515857585158575758FD2EFFA851585758
%515857585158575851585758515857585158575851585758515857582DA8
%58575857585758575857585758577CFD2EFFA85857585758575857585758
%575857585758575857585758575857585758575857588351585158515851
%5851585158515858FD2EFFAE515851585158515851585158515851585158
%51585158515851585158515851582DA87C5858577C5858577C5858577C57
%7CFD2EFFA858577C5858577C5858577C5858577C5858577C5858577C5858
%577C5858577C5758A7515857585158575851585758515858FD2EFFAE5158
%515857585158575851585758515857585158575851585758515857585158
%51A8585758575857585758575857585183FD2EFFA8585758575857585758
%575857585758575857585758575857585758575857585758A75158515851
%58515851585158515758FD2EFFA82D585158515851585158515851585158
%515851585158515851585158515851582DA858577C5858577C5858577C58
%585783FD2EFFA8585758577C5858577C5858577C5858577C5858577C5858
%577C5858577C58585758A7575851585758515857585158575758FD2EFFA8
%515857585158575851585758515857585158575851585758515857585158
%57582DA858575857585758575857585758577CFD2EFFA858575857585758
%575857585758575857585758575857585758575857585758575883515851
%585158515851585158515858FD2EFFAE5158515851585158515851585158
%5158515851585158515851585158515851582DA8835758577C5858577C58
%58577C577CFD2EFFA858577C5858577C5858577C5858577C5858577C5858
%577C5858577C5858577C5758A87C5857585158575851585758515858FD2E
%FFAE51585158575851585758515857585158575851585758515857585158
%5758515857CF835758575857585758575857585183FD2EFFA85857585758
%5758575857585758575857585758575857585758575857585758577DA87D
%7C51585158515851585158515758FD2EFFA82D5851585158515851585158
%515851585158515851585158515851585158515858FFA758835858575857
%58577C58585758AEFD2DFF83585758577C5858577C5858577C5858577C58
%58577C5858577C58585758587C7C83A87D7C587D58585158515851585158
%517C7C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D5883
%7C7D58837C7D58837C7D58837C7D58837C58515851585158515851585158
%51585158515851585158515851585758577C587C58FFA77C7D58837C7D58
%7D587C587D587C587C587C587C587C587C587C587C587C587C587C587C58
%7C587C587C587C587C587C587C587C587C587C587C587C587C587D587C58
%7D587C587D587C587D587C587D587C587D587C58837C8358837C7DA87C7C
%587C587D587C587D587C587D587C587D587C587D587C587D587C587D587C
%587D587C587D587C587D587C587D587C587D587C587D587C587D587C587D
%587C587D587C587D587C587D587C587D587C587D587C587D587C587D587C
%587C58AEA77C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C83A87D7C587C587D587C587D587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587D587C587D587C587D58AE8358837C7D58837C7D58837D837C
%837D837C837D837C837D837C837D837C837D837C837D837C837D837C837D
%837C837D837C837D837C837D837C837D837C837D837C837D837C837D837C
%837D837C837D837C837D8358837C7D58837C7D5883A87D7C587C587C587C
%587D7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A8
%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8
%A8A87DA8A8A87DA8A8A87DA8A8A87DA87D7C587C587C587C587C58CFA758
%837C837C837C837DFD1DA87DA8A8FFA8A8A8FFA8A8A8FF7DFD21A87C837C
%837C837C835883A87D7C587D587C587D587DFD1CA8275252A87DA8A8A87D
%A8A8A87D277DFD1FA8837C587D587C587D587C58FFA77C7D58837C7D5883
%7DFD1BA87D277DFF7D52527D275227A8525227FD21A87C7D58837C7D5883
%7C7DA87C7C587C587C587C5883A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8
%A87DA8A8A87DA8A8A87DA87D52525227522752A8522752A8277DA8A8A87D
%A8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87D7D58
%7C587C587C587C58AEA77C837C837C837C837DFD1DA87D5252527D7D52FF
%525252A827FD21A87C837C837C837C837C83A87D7C587C587D587C5883FD
%1CA852527DA852527D7DA87D7D7D52527DFD1FA87D7D587C587D587C587D
%58AE8358837C7D58837C7D7DFD1CA8FFA8A8A8FFFD07A8FFFD22A858837C
%7D58837C7D5883A87D7C587C587C587C587D7DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87D7C587C587C587C587C58CFA758837C837C837C837CA87DA77DA87D
%A77DA87DA77DA87DA77DA87DA77DA87DA77DA87DA77DA87DA77DA87DA77D
%A87DA77DA87DA77DA87DA77DA87DA77DA87DA77DA87DA77DA87DA77DA87D
%A77DA87DA77DA87DA77C837C837C837C835883A87D7C587D587C587D587C
%587D587C587D587C587D587C587D587C587D587C587D587C587D587C587D
%587C587D587C587D587C587D587C587D587C587D587C587D587C587D587C
%587D587C587D587C587D587C587D587C587D587C587D587C58FFA77C7D58
%837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C
%7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58
%837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C
%7DA87C7C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C58AEA77C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C83A87D7C587C587D587C587D587C587D587C
%587D587C587D587C587D587C587D587C587D587C587D587C587D587C587D
%587C587D587C587D587C587D587C587D587C587D587C587D587C587D587C
%587D587C587D587C587D587C587D587C587D58AE8358837C7D58837C7D58
%837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C
%7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58
%837C7D58837C7D58837C7D58837C7D58837C7D58837C7D5883A87D7C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%58CFA758837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C835883A87D7C587D587C587D587C587D587C587D587C587D587C
%587D587C587D587C587D587C587D587C587D587C587D587C587D587C587D
%587C587D587C587D587C587D587C587D587C587D587C587D587C587D587C
%587D587C587D587C587D587C58FFA77C7D58837C7D58837C7D58837C7D58
%837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C
%7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58
%837C7D58837C7D58837C7D58837C7D58837C7DA87C7C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C58AEA77C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%83A87D7C587C587D587C587D587C587D587C587D587C587D587C587D587C
%587D587C587D587C587D587C587D587C587D587C587D587C587D587C587D
%587C587D587C587D587C587D587C587D587C587D587C587D587C587D587C
%587D587C587D58AE8358837C7D58837C7D58837C7D58837C7D58837C7D58
%837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C
%7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58
%837C7D58837C7D58837C7D5883A87D7C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C58CFA758837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C835883A87D7C587D
%587C587D587C587D587C587D587C587D587C587D587C587D587C587D587C
%587D587C587D587C587D587C587D587C587D587C587D587C587D587C587D
%587C587D587C587D587C587D587C587D587C587D587C587D587C587D587C
%58FFA77C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58
%837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C
%7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58
%837C7D58837C7DA87C7C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C58AEA77C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C83A87D7C587C587D587C587D
%587C587D587C587D587C587D587C587D587C587D587C587D587C587D587C
%587D587C587D587C587D587C587D587C587D587C587D587C587D587C587D
%587C587D587C587D587C587D587C587D587C587D587C587D58AE8358837C
%7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58
%837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C
%7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58
%83A87D7C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C58CFA758837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C835883A87D7C587D587C587D587C587D587C587D
%587C587D587C587D587C587D587C587D587C587D587C587D587C587D587C
%587D587C587D587C587D587C587D587C587D587C587D587C587D587C587D
%587C587D587C587D587C587D587C587D587C58FFA77C7D58837C7D58837C
%7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58
%837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C
%7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7DA87C7C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%58AEA77C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C83A87D7C587C587D587C587D587C587D587C587D587C587D
%587C587D587C587D587C587D587C587D587C587D587C587D587C587D587C
%587D587C587D587C587D587C587D587C587D587C587D587C587D587C587D
%587C587D587C587D587C587D58AE8358837C7D58837C7D58837C7D58837C
%7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58
%837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C
%7D58837C7D58837C7D58837C7D58837C7D5883A87D7C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C58CFA758837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C8358
%83A87D7C587D587C587D587C587D587C587D587C587D587C587D587C587D
%587C587D587C587D587C587D587C587D587C587D587C587D587C587D587C
%587D587C587D587C587D587C587D587C587D587C587D587C587D587C587D
%587C587D587C58FFA77C7D58837C7D58837C7D58837C7D58837C7D58837C
%7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58
%837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C
%7D58837C7D58837C7D58837C7DA87C7C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C58AEA77C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C83A87D7C587C
%587D587C587D587C587D587C587D587C587D587C587D587C587D587C587D
%587C587D587C587D587C587D587C587D587C587D587C587D587C587D587C
%587D587C587D587C587D587C587D587C587D587C587D587C587D587C587D
%58AE8358837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C
%7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58
%837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C7D58837C
%7D58837C7D5883A87D7C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C58CFA758837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837C837C837C837C837C835883A87D7C587D587C587D587C
%587D587C587D587C587D587C587D587C587D587C587D587C587D587C587D
%587C587D587C587D587C587D587C587D587C587D587C587D587C587D587C
%587D587C587D587C587D587C587D587C587D587C587D587C58FF83587C58
%837C7C58837C7C58837C7C58837C7C58837C7C58837C7C58837C7C58837C
%7C58837C7C58837C7C58837C7C58837C7C58837C7C58837C7C58837C7C58
%837C7C58837C7C58837C7C58837C7C58837C7C58837C7C58837C7C588358
%7CA87D837D837C837D837C837D837C837D837C837D837C837D837C837D83
%7C837D837C837D837C837D837C837D837C837D837C837D837C837D837C83
%7D837C837D837C837D837C837D837C837D837C837D837C837D837C837D83
%7C837D837C837DCF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: OpenSans
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Euro 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _OpenSans OpenSans
[/_OpenSans/OpenSans 0 0 0 TZ%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (Swatch Libraries.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
10 Bn
%AI5_BeginGradient: (Fade To Center Green)
(Fade To Center Green) 0 3 Bd
[
0.452644
0.139529
0.990814
0.025544
0.533333
0.658824
0.05098
4 %_Br
0.452644
0.139529
0.990814
0.025544
0.533333
0.658824
0.05098
4 %_Br
[
0.452644 0.139528 0.990814 0.025544 0.533333 0.658824 0.05098 2 50 100 %_BS
%_0.452644 0.139528 0.990814 0.025544 0.533333 0.658824 0.05098 2 50 100 Bs
0.452644 0.139528 0.990814 0.025544 0.533333 0.658824 0.05098 2 50 50 %_BS
%_0.452644 0.139528 0.990814 0.025544 0.533333 0.658824 0.05098 2 50 50 Bs
0.452644 0.139528 0.990814 0.025544 0.533333 0.658824 0.05098 2 50 0 %_BS
%_0.452644 0.139528 0.990814 0.025544 0.533333 0.658824 0.05098 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Orange)
(Purple, Orange) 0 3 Bd
[
0.026947
0.307683
0.912016
0.003052
0.984314
0.682353
0.090196
4 %_Br
<
8483838180807F7F7E7D7C7B7A7A78787776767574747373727171706F6F6E6E6D6B6B6A69696868
6665656463636262615F5F5E5D5D5C5C5A59595857575555535251504E4E4C4C4A49484745454343
413F3F3D3C3B3B3B3A3939383837373736353534333332313130302F2E2F2E2D2D2D2D2C2B2C2B2A
2A2A2A292828272727262625252524232322232221212020201F1F1E1D1D1D1C1C1B1B1A1A1A1918
181717171616151414131313121211101010100F0E0E0D0D0D0C0C0B0B0B0A090A090908080807
>
<
ACABABAAAAA9A9A8A8A7A7A6A6A4A5A3A4A2A2A1A1A0A09F9F9E9D9D9C9C9B9B999A989998989696
959594949393929291918F8E8F8D8D8C8C8B8B8A8A89898888868685858383828281807F7E7E7C7C
7B7B7A7A7878777776777576757574747373727172707170706F6F6E6E6D6E6D6D6C6C6B6C6B6B6A
6A6A6A696868686867676666666665656465636463636263626261616160605F5F5F5E5E5E5D5D5D
5D5C5C5B5C5A5B5A5A5959585958575756565556555554545354525352525152505150504F4F4E
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
01020304060608090A0B0C0E0F101112131415161718181A1B1D1E20212224252628292B2D2E3031
33343637393A3C3E4042444547494B4C4F5052545658595B5D5F6062646667696B6D6E7072747577
797A7C7E808183848688898B8D8E909193949697999A9C9D9FA0A2A3A5A6A7A9AAACADAFB0B2B3B5
B6B7B9BABBBDBEBFC1C2C3C5C6C7C8C9CACBCDCED0D1D2D4D5D6D8D9DBDCDEDFE0E2E3E4E6E7E9
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000001010101010102020202020202030303030303030404050607070809090A0B0B0C0D0D0E0E
0F0F10111112111111111111101110101010101010100F0F0F0F0F0F0E0E0E0E0E0D0D0D0C0C0C0B
0B0B0B0A0A0A09090909090808080808080707070707060606060605050505040404040404040303
030303030303030202020202020202020202020202020202020202010101010101010101010101
>
<
7F808081828283838485858687878888898A8A8B8C8C8D8D8E8F8F90919192929394949596969797
9899999A9B9B9C9C9D9E9E9FA0A0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABABACADADAEAFAFB0B0
B1B2B2B3B4B4B5B5B6B7B7B8B9B9BABABBBCBCBDBEBEBFC0C0C1C1C2C3C3C4C5C5C6C6C7C8C8C9CA
CACBCBCCCDCDCECFCFD0D0D1D2D2D3D4D4D5D5D6D7D7D8D9D9DADADBDCDCDDDEDEDFDFE0E1E1E2E3
E3E4E4E5E6E6E7E8E8E9E9EAEBEBECEDEDEEEEEFF0F0F1F2F2F3F3F4F5F5F6F7F7F8F8F9FAFAFB
>
<
47484849494A4A4B4B4C4C4D4D4E4E4F4F505051515252535354555556565757585859595A5A5B5B
5C5C5D5D5E5E5F5F606061626263636464656566666767686869696A6A6B6B6C6C6D6D6E6F6F7070
7171727273737474757576767777787879797A7B7B7C7C7D7D7E7E7F7F8080818182828383848485
85868687888889898A8A8B8B8C8C8D8D8E8E8F8F909091919292939394959596969797989899999A
9A9B9B9C9C9D9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAABABACACADADAE
>
<
DDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6
B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E
8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766
6564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E
3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817
>
4 %_Br
[
0.026947 0.307683 0.912016 0.003052 0.984314 0.682353 0.090196 2 50 100 %_BS
%_0.026947 0.307683 0.912016 0.003052 0.984314 0.682353 0.090196 2 50 100 Bs
0.026947 0.307683 0.912016 0.003052 0.984314 0.682353 0.090196 2 50 51.6854 %_BS
%_0.026947 0.307683 0.912016 0.003052 0.984314 0.682353 0.090196 2 50 51.6854 Bs
0.516258 0.674983 0 0 0.498039 0.278431 0.866667 2 50 0 %_BS
%_0.516258 0.674983 0 0 0.498039 0.278431 0.866667 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 100)
(Unnamed gradient 100) 0 5 Bd
[
<
0002040608090B0D0F11131517191B1C1E2022242527282A2C2D2F303233353738393B3C3E3F4042
43444547484A4A4C4D4F4F51525254555657585A5A5B5C5D5E5F60616263646566666768696A6B6B
6C6D6D6E6F7071717273737475757676777878797A7A7A7B7B7C7D7D7E7F7F7F8081818282838384
85858586878787888989898A8A8B8B8B8C8D8D8D8E8E8F8F8F909091929292929393949494959595
95969697979797989899999999999A9A9B9B9B9B9B9C9C9D9D9D9D9D9E9E9E9E9E9E9F9F9FA0A0A0
A0A0A0A1A1A1A2A2A2A2A2A2A3A3A3A3A4A4A4A4A4A4A4A4A5A5A5A5A5A5A5A5A6A6A6A6A6A7A7A7
A7A7A7A7A7A7A7A8A8A8A8A8A8A8A8A8A8A8A8A9A9A9A9A9A9A9AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAABABABABABABABABABABABABABABABABABABABABABABACACACACACACACACACACACACACACACAD
ADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADAD
ADADADADADADADADADADADADADADADADADADADAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE
AEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE
AEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE
AEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE
AEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE
>
<
00010304050608090A0C0D0E1011121315161719191B1C1D1E1F2022232425262728292A2B2C2D2E
2F303132333435363738383A3A3B3C3D3D3E3F404141424344444546474748494A4A4B4B4C4D4E4E
4F4F5050515252535454555556565757585859595A5A5A5B5B5C5C5D5E5E5E5F5F60606161626263
636364646565666667676768686969696A6A6A6B6C6C6C6D6D6E6E6E6F6F6F6F7070717171727272
72737374747474757576767676767777777778787879797979797A7A7A7A7A7B7B7B7C7C7C7C7C7C
7D7D7D7D7D7D7E7E7E7F7F7F7F7F7F7F808080808181818181818181828282828282828282838383
83838484848484848484848484858585858585868686868686868686868686868686878787878787
87878787878787878787878788888888888888888888888888888888888888888888888888888889
8989898989898989898989898989898989898989898A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A
8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A
8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A
8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A
8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A
8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F1F21222223242526
2728292A2B2C2C2E2E303031323334343536373839393A3B3C3D3E3E3F4041414243434445464647
484849494B4B4C4D4D4E4E4F505051515253535454555556565757585959595A5B5B5C5D5D5D5E5F
5F5F60616262626364646465656667676768686969696A6B6B6C6C6C6D6D6E6E6F6F6F6F70717171
71727273737474747475757576767777777778787879797A7A7A7A7A7B7B7B7C7C7C7C7C7C7D7D7D
7E7E7E7F7F7F7F7F7F80808081818181828282828282828283838383848484848585858585858585
858586868686868787878787878888888888888888888888888889898989898989898A8A8A8A8A8A
8A8A8A8A8A8A8A8A8A8A8A8A8B8B8B8B8B8B8B8B8B8B8B8B8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C
8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D
8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E
8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E
8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E
8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E
8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E
>
<
00000000000000000000000001010101010102020202020203030303040404040505050506060707
07080809090A0A0A0B0B0C0D0D0D0E0F0F1010111112121314151616171719191A1A1B1B1D1D1E1F
2020212223242526272728292A2B2C2D2E2F30313233333435363738393A3A3B3C3D3E3F3F404142
434344454646474849494A4C4C4D4E4E4F505052535354565657575859595B5B5C5C5D5D5F606062
6263636565666668686969696B6B6C6C6E6E707070717173737375757676767878787A7A7A7C7C7C
7D7D7D7F7F7F8181818383838585858587878787898989898B8B8B8B8D8D8D8D8F8F8F8F8F919191
919193939393939595959595959797979797979A9A9A9A9A9A9A9C9C9C9C9C9C9C9C9E9E9E9E9E9E
9E9EA0A0A0A0A0A0A0A0A0A0A3A3A3A3A3A3A3A3A3A3A3A3A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A7
A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACACACACACACACACACACACACACACACACACACACACAC
ACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACAC
ACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACAC
ACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACAC
ACACACACACACACACACACACACACACACAC
>
<
FFFDFBF9F7F5F3F1EFEDEBE9E7E5E3E1DFDDDBD9D8D6D4D2D0CFCDCBC9C8C6C4C3C1BFBEBCBBB9B7
B6B4B3B1B0AEADABAAA8A7A5A4A3A1A09F9D9C9A99989795949391908F8E8C8B8A89888785848382
81807F7E7C7B7A797877767574737271706F6E6D6C6B6B6A69686766656464636261605F5F5E5D5C
5B5B5A59585857565555545353525151504F4F4E4D4D4C4B4B4A4A49484847474646454544434342
42414140403F3F3E3E3D3D3D3C3C3B3B3A3A39393938383737373636353535343434333333323232
3131313030302F2F2F2E2E2E2D2D2D2D2C2C2C2C2B2B2B2B2A2A2A2A292929292828282828272727
27272626262626252525252525242424242424232323232323232222222222222222212121212121
2121202020202020202020201F1F1F1F1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D
1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C
1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B
>
<
FFFDFBF9F7F5F3F1EFEDEBE9E7E5E3E1DFDDDBD9D8D6D4D2D0CFCDCBC9C8C6C4C3C1BFBEBCBBB9B7
B6B4B3B1B0AEADABAAA8A7A5A4A3A1A09F9D9C9A99989795949391908F8E8C8B8A89888785848382
81807F7E7C7B7A797877767574737271706F6E6D6C6B6B6A69686766656464636261605F5F5E5D5C
5B5B5A59585857565555545353525151504F4F4E4D4D4C4B4B4A4A49484847474646454544434342
42414140403F3F3E3E3D3D3D3C3C3B3B3A3A39393938383737373636353535343434333333323232
3131313030302F2F2F2E2E2E2D2D2D2D2C2C2C2C2B2B2B2B2A2A2A2A292929292828282828272727
27272626262626252525252525242424242424232323232323232222222222222222212121212121
2121202020202020202020201F1F1F1F1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D
1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C
1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B
>
<
FFFDFBF9F7F5F3F1EFEDEBE9E7E5E3E1DFDDDBD9D8D6D4D2D0CFCDCBC9C8C6C4C3C1BFBEBCBBB9B7
B6B4B3B1B0AEADABAAA8A7A5A4A3A1A09F9D9C9A99989795949391908F8E8C8B8A89888785848382
81807F7E7C7B7A797877767574737271706F6E6D6C6B6B6A69686766656464636261605F5F5E5D5C
5B5B5A59585857565555545353525151504F4F4E4D4D4C4B4B4A4A49484847474646454544434342
42414140403F3F3E3E3D3D3D3C3C3B3B3A3A39393938383737373636353535343434333333323232
3131313030302F2F2F2E2E2E2D2D2D2D2C2C2C2C2B2B2B2B2A2A2A2A292929292828282828272727
27272626262626252525252525242424242424232323232323232222222222222222212121212121
2121202020202020202020201F1F1F1F1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D
1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C
1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B
>
4 %_Br
0.000092
0
0.000031
0
1
1
1
4 %_Br
0.000092
0
0.000031
0
1
1
1
4 %_Br
0.000092
0
0.000031
0
1
1
1
4 %_Br
[
0.681666 0.542443 0.556664 0.675959 0.105882 0.105882 0.105882 2 50 100 %_BS
%_0.681666 0.542443 0.556664 0.675959 0.105882 0.105882 0.105882 2 50 100 Bs
1 0 13 51.0989 %_BS
%_1 0 13 51.0989 Bs
1 0 61.1111 34.6154 %_BS
%_1 0 61.1111 34.6154 Bs
1 0 71.0526 20.3297 %_BS
%_1 0 71.0526 20.3297 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 101)
(Unnamed gradient 101) 0 3 Bd
[
<
B1B1B0B0B0
>
<
8E8D8D8D8D
>
<
9292919191
>
<
BCB9B7B7B7
>
<
1516171717
>
<
1516171717
>
<
1516171717
>
4 %_Br
<
B0B1
>
<
8D8E
>
<
9192
>
<
B7BC
>
<
1715
>
<
1715
>
<
1715
>
4 %_Br
[
0.690974 0.552178 0.568353 0.716274 0.090196 0.090196 0.090196 2 50 100 %_BS
%_0.690974 0.552178 0.568353 0.716274 0.090196 0.090196 0.090196 2 50 100 Bs
0.69546 0.557031 0.574365 0.737667 0.082353 0.082353 0.082353 2 23.7288 50 %_BS
%_0.69546 0.557031 0.574365 0.737667 0.082353 0.082353 0.082353 2 23.7288 50 Bs
0.690974 0.552178 0.568353 0.716274 0.090196 0.090196 0.090196 2 50 0 %_BS
%_0.690974 0.552178 0.568353 0.716274 0.090196 0.090196 0.090196 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 114)
(Unnamed gradient 114) 0 3 Bd
[
<
0002030507090A0C0E10121416181A1C1E2022242527292B2E2F31333536383A3B3D3F4042444547
484A4C4E505153545557585A5B5D5E616263656667696A6B6D6E6F707273747577797A7B7C7E7F80
81828384858688898A8B8C8D8E8F90919394959697999A9B9B9C9E9FA0A1A2A4A5A5A6A7A8A9A9AB
ACADAEAEAFB1B2B2B3B4B5B5B7B8B8B9BABBBBBDBEBEBFBFC0C1C1C2C4C4C5C5C6C6C7C8C8C9C9CA
CACBCBCCCCCCCCCDCDCECECFCFD0D0D1D1D2D2D3D3D3D4D4D5D5D6D6D6D7D7D8D8D8D9D9D9DADADA
DBDBDCDCDCDDDDDDDDDEDEDEDFDFDFE0E0E0E0E1E1E1E2E2E2E2E2E2E2E2E3E3E3E3E4E4E4E4E4E4
E4E4E4E4E5E5E5E5E5E6E6E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8
E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9EAEAEAE9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
>
<
000102030406060809090B0C0C0E0E0F11111213141416161718191A1A1C1C1E1F1F212122232425
272728292A2B2B2D2E2E2F2F31323333343536373838393A3B3B3C3D3E3E3F404142424344454647
4748494A4B4C4D4E4D4E4F50515252535455565756575859595A5B5C5B5C5D5E5E5F606061626263
64636466656667676868696A6A6B6B6C6C6D6E6E6F6F707071717272737374747575767677777878
7A79797A7A7C7C7D7D7C7E7E7F7F7F80808081818282828483838585858686858787878788888889
89898A8A8A8A8B8B8B8B8C8C8C8C8D8D8D8D8F8E8E8E909090908F91919191919292929292949493
939393959595959595969696969696979797979797979799999999999999999A9A9A9A9A9A9A9A9A
9C9B9B9B9B9B9B9B9B9B9D9D9D9D9D9D9D9D9D9D9D9D9D9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EA0
A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1
A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A3A3A3A3A3A3A2A2A2A2A2A2A2A2A2A2A2A2
A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2
A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2
A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2
A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2
>
<
00010102030404050505060607070708080808080808080808080807070707060606050505030302
02010100000001010101020202020203030303030303040404040505050505050505050605050505
05050404040403030302020201010100000000000000000000000001010101010101010101010101
01010101010101010102020202020203030303030303030303030303030303030303030303030202
02020202020101010101000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101
>
<
00000000000000000000000000000000000101010101010101010101010101010101010101000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000
>
<
FFFDFBF9F7F5F3F1EFEDEBE9E7E5E3E1DFDDDBD9D8D6D4D2D0CFCDCBC9C8C6C4C3C1BFBEBCBAB9B7
B6B4B3B1AFAEACABAAA8A7A5A4A2A19F9E9D9B9A99979695939291908E8D8C8B8988878685838281
807F7E7D7C7B797877767574737271706F6E6D6C6B6A6968686766656463626160605F5E5D5C5C5B
5A59585857565555545352525150504F4E4D4D4C4B4B4A4A49484847464645454444434242414140
403F3F3E3E3D3D3C3C3B3B3A3A3939383837373636363535343433333332323131313030302F2F2F
2E2E2D2D2D2C2C2C2C2B2B2B2A2A2A29292929282828272727272626262625252525242424242423
23232323222222222221212121212020202020201F1F1F1F1F1F1E1E1E1E1E1E1E1D1D1D1D1D1D1D
1D1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1919191919191919
19191919191919191818181818181818181818181818181818181818181717171717171717171717
17171717171717171717171717171717171717171717171717171717161616161616161616161616
16161616161616161616161616161616161616161616161616161616161616161616161616161616
16161616161616161616161616161616161616161616161616161616161616161616161616161616
16161616161616161616161616161616161616161616161616161616161616161616161616161616
16161616161616161616161616161616161616161616161616161616
>
<
FFFDFCFAF8F6F5F3F1F0EEECEBE9E8E6E4E3E1E0DEDDDBDAD8D7D5D4D3D1D0CECDCCCAC9C8C6C5C4
C2C1C0BEBDBCBBB9B8B7B6B5B3B2B1B0AFAEACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897
969594939291908F8F8E8D8C8B8A8A8988878685858483828281807F7F7E7D7C7C7B7A7A79787877
76767574747372727171706F6F6E6E6D6D6C6B6B6A6A696968686767666665656464636362626161
6060605F5F5E5E5D5D5D5C5C5B5B5B5A5A5A59595858585757575656565555555454545453535352
525251515151505050504F4F4F4F4E4E4E4E4D4D4D4D4C4C4C4C4C4B4B4B4B4B4A4A4A4A4A494949
49494948484848484847474747474746464646464646464545454545454545444444444444444444
43434343434343434343424242424242424242424242424141414141414141414141414141414140
4040404040404040404040404040404040404040403F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F
3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
>
<
FFFEFEFDFCFBFBFAF9F9F8F7F6F6F5F4F4F3F2F2F1F0F0EFEFEEEDEDECECEBEAEAE9E9E8E7E7E6E6
E5E5E4E4E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDBDADAD9D9D8D8D7D7D6D6D6D5D5D4D4D4D3D3
D2D2D2D1D1D0D0D0CFCFCFCECECDCDCDCCCCCCCBCBCBCACACAC9C9C9C8C8C8C8C7C7C7C6C6C6C5C5
C5C5C4C4C4C4C3C3C3C2C2C2C2C1C1C1C1C1C0C0C0C0BFBFBFBFBEBEBEBEBEBDBDBDBDBDBCBCBCBC
BCBBBBBBBBBBBBBABABABABABAB9B9B9B9B9B9B8B8B8B8B8B8B8B7B7B7B7B7B7B7B6B6B6B6B6B6B6
B6B5B5B5B5B5B5B5B5B4B4B4B4B4B4B4B4B4B4B3B3B3B3B3B3B3B3B3B3B3B2B2B2B2B2B2B2B2B2B2
B2B2B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0AFAFAFAF
AFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE
AEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEADADADADADADADADAD
ADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADAD
ADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADAD
ADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADAD
ADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADAD
ADADADADADADADADADADADADADADADADADADADADADADADADADADADAD
>
4 %_Br
0.000092
0
0.000031
0
1
1
1
4 %_Br
[
0.924102 0.637018 0.004273 0.000153 0.086275 0.243137 0.678431 2 50 100 %_BS
%_0.924102 0.637018 0.004273 0.000153 0.086275 0.243137 0.678431 2 50 100 Bs
1 0 13 45 %_BS
%_1 0 13 45 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 120)
(Unnamed gradient 120) 1 2 Bd
[
<
B5B5B5B5B5B6B6B6B6B6B7B7B7B7B7B7B7B7B7B6B6B7B7B8B8B8B8B8B8B7B7B7B7B7B8B8B8B8B7B7
B7B7B6B6B6B7B7B7B7B7B7B7B7B7B7B8BABABBBBBCBCBDBDBEBEBFBFBFBFBFBFBEC0BFBFBFBEBEBD
BDBCBDBCBCBCBCBDBEBEBFC2C2C3C3C4C5C5C6C7C7C8C8C8C8C8C8C9C8C7C7C6C4C3C2C1C1C0C0C0
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000010202030303040405050606060708080808090A0A0A0B0B0B0B0C0C0C0C
>
<
7F7F7E7D7D7C7C7A7A797977767674747271716F6F6D6C6B6A686865646262605E5E5C5B58585655
5353504F4D4C4B494846444442413F3E3B3B3938353331312F2D2C292826242421201E1C1A191715
141311100E0D0D0D0C0C0B0B0A0A0A09090808070706060504040303020101000000000000000000
>
0
<
4D4D4D4D4D4D4D4D4D4D4C4C4C4C4C4C4C4C4C4C4C4C4C4B4B4B4B4B4B4B4B4B4B4B4A4A4A4A4A4A
4A4A4A4A4A4949494949494949494948484848484848484847474747474747474746464646464646
46464545454545454545454444444444444444434343434343434342424242424242424241414141
>
<
F1F1F1F0F0F0F0EFEFEFEEEEEDEDEDECECECEBEBEAEAEAE9E9E8E8E7E7E6E6E6E5E5E4E4E3E3E2E2
E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9D8D8D7D6D6D5D5D4D4D3D3D2D1D1D0D0CFCFCECECDCC
CCCBCBCAC9C9C8C8C7C7C6C5C5C4C4C3C2C2C1C0C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B7B6B5B5B4
>
<
9696979797989899999A9A9B9C9C9D9D9E9F9FA0A0A1A2A2A3A4A4A5A6A7A7A8A9A9AAABACACADAE
AFAFB0B1B2B3B3B4B5B6B7B7B8B9BABBBCBCBDBEBFC0C1C1C2C3C4C5C6C7C8C8C9CACBCCCDCECFD0
D1D1D2D3D4D5D6D7D8D9DADBDCDDDEDFDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
>
4 %_Br
[
0.711055 0 0.497688 0 0.301961 0.945098 0.588235 2 57.3034 0 %_BS
%_0.711055 0 0.497688 0 0.301961 0.945098 0.588235 2 57.3034 0 Bs
0.751034 0.047456 0 0 0.254902 0.705882 0.964706 2 50 100 %_BS
%_0.751034 0.047456 0 0 0.254902 0.705882 0.964706 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 124)
(Unnamed gradient 124) 0 3 Bd
[
<
EBECEBEBECEBEBECEBEBEAE9E8E8E7E7E7E6E6E7E7E7E8E9EAEAEBEBEBEBEBEBEBEAE8E6E5E3E3E3
E2E1E0E0DFDFDFDFDEDEDEDEDEDEDEDEDEDEDDDCDCDBDADADAD9D8D7D7D6D6D5D5D5D4D4D4D4D3D3
D3D3D3D3D3D3D3D2D2D2D2D1D1D1D1D1D0D0D0D0CFCFCFCFCECECDCDCDCDCCCCCCCCCCCBCBCBCBCB
CACACACACAC9C9C9CACAC9C9C9C9C9C9C8C8C8C8C8C7C7C7C7C7C7C6C6C6C6C6C6C5C5C5C5C5C5C5
C3C3C3C3C3C3C3C2C2C2C2C2C2C1C1C0C0C0C0C0C0BFBFBFBFBFBFBFBEBEBEBEBEBEBEBEBEBDBDBD
BDBDBEBEBEBDBDBDBDBDBDBDBDBDBDBCBCBCBCBCBDBDBDBDBDBCBCBCBCBCBCBCBCBCBCBCBBBBBBBB
BBBBBBBBBBBBBBBBBBBABABABABABABABABABABABABABAB9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9
B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7
B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B6B6B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5
B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5
B5B5
>
<
97969492918F8E8A89888685848281807E7D7B7978767472716F6D6C6A696766646362615F5E5E5D
5B5A5857555352504F4F4D4C4B49484645454342403E3D3C3C3A383735343432312F2E2E2C2A2929
282624232322211F1F1E1D1D1C1A1919181615151413131110100F0E0E0D0C0D0C0B0B0B0A0A0A09
09090908080808080707070707060606050505050504040404030303030303020202020202020101
01010101010101010100000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000
>
<
00000000000000000000000000000000000000000000000000000103030404050607070708090909
090A0A0A0B0B0B0B0B0B0C0B0B0B0B0B0B0B0B0C0E0F10101013131415161718191A1B1B1D1E1F1F
202223242424252828292A2A2A2D2E2E2E2F303132333334343637373738393A3B3C3C3C3D3D4040
40414142434445454646464749494A4A4B4B4C4D4E4F4F4F4F505053535353545454555657575757
585858585A5A5A5A5A5B5B5C5C5D5D5E5E5E5E5E5F5F5F6161616162626363636365666666666666
67676868696A6A6A6A6A6A6B6B6B6C6B6B6E6E6E6E6E6E6F6F6F6F6F6F6F70727272727272737373
737373737374747676767676767676767677777777777777777778797979797979797979797A7A7A
7979797A7A7A7A7A7A7A7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7D7D7D7D7D7D
7D7D7D7D7D7D7D7D7D7E7E7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F
7F7F
>
0
<
18181919191A1A1A1B1B1B1C1C1C1D1D1D1E1E1E1F1F1F1F20202021212122222222232323242424
242525252626262627272728282828292929292A2A2A2B2B2B2B2C2C2C2C2D2D2D2D2E2E2E2E2F2F
2F2F2F30303030313131313232323232333333333434343434353535353536363636363737373737
383838383839393939393A3A3A3A3A3A3B3B3B3B3B3C3C3C3C3C3C3D3D3D3D3D3D3E3E3E3E3E3E3E
3F3F3F3F3F3F3F404040404040414141414141414142424242424242434343434343434343444444
44444444444545454545454545454546464646464646464646474747474747474747474748484848
48484848484848484849494949494949494949494949494A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A
4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C
4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D
4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D
4D4D
>
<
464748494A4B4C4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6C6D
6E6F70717273747576767778797A7B7C7D7D7E7F8081828383848586878888898A8B8C8C8D8E8F8F
909192939394959696979898999A9B9B9C9D9E9E9FA0A0A1A2A2A3A4A4A5A6A6A7A8A8A9AAAAABAC
ACADADAEAFAFB0B0B1B2B2B3B3B4B5B5B6B6B7B7B8B9B9BABABBBBBCBCBDBDBEBEBFC0C0C1C1C2C2
C3C3C4C4C4C5C5C6C6C7C7C8C8C9C9CACACACBCBCCCCCDCDCDCECECFCFD0D0D0D1D1D2D2D2D3D3D3
D4D4D5D5D5D6D6D6D7D7D7D8D8D8D9D9D9DADADADBDBDBDCDCDCDDDDDDDDDEDEDEDFDFDFDFE0E0E0
E0E1E1E1E1E2E2E2E2E3E3E3E3E4E4E4E4E5E5E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E8E9E9E9
E9E9E9EAEAEAEAEAEAEAEBEBEBEBEBEBEBECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEE
EEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1
F1F1
>
<
BEBEBDBDBDBDBCBCBCBCBBBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B7B6B6B6B6B5B5B5B5
B5B4B4B4B4B3B3B3B3B3B2B2B2B2B2B1B1B1B1B1B0B0B0B0B0AFAFAFAFAFAEAEAEAEAEAEADADADAD
ADACACACACACACABABABABABABAAAAAAAAAAAAA9A9A9A9A9A9A8A8A8A8A8A8A7A7A7A7A7A7A7A6A6
A6A6A6A6A6A5A5A5A5A5A5A5A4A4A4A4A4A4A4A3A3A3A3A3A3A3A3A2A2A2A2A2A2A2A2A1A1A1A1A1
A1A1A1A1A0A0A0A0A0A0A0A0A09F9F9F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E9E9D9D9D9D9D9D9D
9D9D9D9D9C9C9C9C9C9C9C9C9C9C9C9C9C9B9B9B9B9B9B9B9B9B9B9B9B9B9B9A9A9A9A9A9A9A9A9A
9A9A9A9A9A9A9A999999999999999999999999999999999999999898989898989898989898989898
98989898989898989898979797979797979797979797979797979797979797979797979797979797
97979797979797979796969696969696969696969696969696969696969696969696969696969696
96969696969696969696969696969696969696969696969696969696969696969696969696969696
9696
>
4 %_Br
<
D7D9DADBDCDEDFE0E1E1E1E2E2E3E3E4E4E5E5E6E6E7E7E8E8E9E9E9E9EAEAEAEBEBEB
>
<
78797A797A7B7C7D7E7E7F81828384848586878888898A8B8D8E8E8F91929395949697
>
<
0000000000000000000000000000000000000000000000000000000000000000000000
>
0
<
383736353433323130302F2E2D2C2B2A29282726252423222120201F1E1D1C1B1A1918
>
<
626160605F5E5D5C5B5B5A5958575656555453525251504F4E4D4D4C4B4A4948484746
>
<
E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
>
4 %_Br
[
0.711055 0 0.497688 0 0.301961 0.945098 0.588235 2 50 100 %_BS
%_0.711055 0 0.497688 0 0.301961 0.945098 0.588235 2 50 100 Bs
0.923186 0.593255 0.000732 0 0.094118 0.27451 0.745098 2 23.7288 50 %_BS
%_0.923186 0.593255 0.000732 0 0.094118 0.27451 0.745098 2 23.7288 50 Bs
0.843992 0.46894 0 0 0.219608 0.384314 0.882353 2 50 0 %_BS
%_0.843992 0.46894 0 0 0.219608 0.384314 0.882353 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 30)
(Unnamed gradient 30) 0 4 Bd
[
<
D3D3D4D5D6D6D7D6D7D7D7D7D7D6D6D6D6D6D6D6D6D7D7D7D7D8D8D9D9DADADADBDBDBDBDCDCDCDB
DBDADADADADADADBDBDCDDDFE0E2E3E4E5E6E7E8E9E9EAEBECEBEAE8E6E5E3E2E1E0DFDEDEDEDEDE
DEDEDFE0E0E2E2E3E4E6E7E8E9E9EAEBECECEDEEEDEEEDECEAE8E7E5E4E3E2E1E0DFDFDEDEDEDDDD
DC
>
<
7776747371706E6D6B6A6867656462615F5E5C5A5957555452504F4D4C4A4847454442413F3E3C3B
393837353432312F2D2B29272523211F1D1B1A181513110F0D0C0B0B0B0B0A0A0A09090908080807
07060606050504040403030302020201010101000000000000000000000000000000000000000000
00
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000010101010101010202010101010101
01
>
0
<
383837373636353534343333323231313130302F2F2E2E2D2D2C2C2B2B2A2A2A2929282827272626
252524242323232222212120201F1F1E1E1D1D1C1C1C1B1B1A1A1919181817171616151515141413
131212111110100F0F0E0E0E0D0D0C0C0B0B0A0A0909080807070706060505040403030202010100
00
>
<
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B
8C8D8E8F909192939495969798999A9B9C9D9E9FA1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDC
DD
>
<
F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6
F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9
F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFC
FC
>
4 %_Br
<
E0DEDDDCDBD9D8D6D5D4D3
>
<
7273737374747676777777
>
0
0
<
2D2E2F3031333435363738
>
<
6565656565656464646464
>
<
EEEFEFF0F0F1F1F2F2F3F3
>
4 %_Br
<
EAE8E7E7E6E5E4E3E2E2E1E1E1E0E0E0
>
<
82807F7F7E7D7B7A7A79787675757472
>
0
0
<
1D1E1F2021222324262728292A2B2C2D
>
<
595A5B5B5C5D5E5F5F60616263636465
>
<
F4F4F3F3F2F2F2F1F1F0F0F0EFEFEEEE
>
4 %_Br
[
0.864195 0 0.005493 0 0 0.866667 0.988235 2 50 98.3146 %_BS
%_0.864195 0 0.005493 0 0 0.866667 0.988235 2 50 98.3146 Bs
0.827573 0.467445 0 0 0.219608 0.392157 0.952941 2 50 62.9213 %_BS
%_0.827573 0.467445 0 0 0.219608 0.392157 0.952941 2 50 62.9213 Bs
0.877012 0.448646 0 0 0.176471 0.396078 0.933333 2 50 61.7977 %_BS
%_0.877012 0.448646 0 0 0.176471 0.396078 0.933333 2 50 61.7977 Bs
0.91574 0.508629 0 0 0.113725 0.34902 0.956863 2 50 0 %_BS
%_0.91574 0.508629 0 0 0.113725 0.34902 0.956863 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 71)
(Unnamed gradient 71) 0 4 Bd
[
0
0
0
1
0
0
0
4 %_Br
0
0
0
1
0
0
0
4 %_Br
<
1E160F060300
>
<
19120C050300
>
<
19120C050300
>
<
F6F9FBFDFEFF
>
<
060504020100
>
<
060504020100
>
<
060504020100
>
4 %_Br
[
0 0 0 1 0 0 0 2 50 98.3146 %_BS
%_0 0 0 1 0 0 0 2 50 98.3146 Bs
0 0 0 1 0 0 0 2 50 62.9213 %_BS
%_0 0 0 1 0 0 0 2 50 62.9213 Bs
0 0 0 1 0 0 0 2 50 61.7977 %_BS
%_0 0 0 1 0 0 0 2 50 61.7977 Bs
0.119387 0.096162 0.09958 0.964721 0.023529 0.023529 0.023529 2 50 0 %_BS
%_0.119387 0.096162 0.09958 0.964721 0.023529 0.023529 0.023529 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (White, Black)
(White, Black) 0 2 Bd
[
<
00010203040506070809090A0B0C0D0E0F101112131415161718191A1B1B1C1D1E1F202122232425
26272828292A2B2C2D2E2F3030313233343536373838393A3B3C3D3E3F3F40414243444445464748
494A4A4B4C4D4E4F4F5051525253545556565758595A5A5B5C5D5D5E5F6060616263636465666667
6869696A6B6B6C6D6D6E6F6F7071717273737475757676777878797A7A7B7B7C7D7D7E7F7F808181
8283838485858687878889898A8B8B8C8D8D8E8F8F9091929293949495959697979899999A9B9B9C
9D9D9E9E9FA0A0A1A2A2A3A4A4A5A5A6A7A7A8A8A9AAAAABABACADADAEAEAFB0B0B1B1B2B3B3B4B2
9E8C7A6A5B4C3F33281E160F0A060300
>
0
<
00000101020203030404050506060707080809090A0A0B0B0C0C0D0D0E0E0F0F1010111112131314
141515161617171819191A1A1B1B1C1D1D1E1E1F1F20212122222323242525262627282829292A2B
2B2C2C2D2E2E2F30303131323333343435363637383839393A3B3B3C3D3D3E3E3F40404141424343
444545464647484849494A4B4B4C4D4D4E4E4F50505151525353545455565657575859595A5B5B5C
5D5D5E5F5F60616262636464656667676869696A6B6C6C6D6E6F6F70717172737474757677777879
7A7A7B7C7C7D7E7F7F808182828384858586878888898A8A8B8C8C8D8E8F8F909192929394959694
847566584C40352B2219120C08050300
>
<
00000000000000000000000000000000000000000000000101010101010101010101010102020202
02020202020202030303030303040404040404040505050505050606060607070707080808090909
090A0A0A0A0B0B0B0C0C0D0D0D0E0E0F0F0F101011111112121313141515161617171819191A1A1B
1B1C1D1D1E1F202021222323242526272728292A2B2C2D2E2F303132333435363738393A3B3C3D3E
3F404142434445464748494A4C4D4E4F50525354565758595B5C5D5F606263656668696B6C6E7071
737576787A7C7D7F81838587898B8D8F919395979A9C9EA0A3A5A7AAACAFB1B4B7B9BCBFC2C5C7CA
D0D6DBE0E4E8ECF0F3F6F9FBFCFDFEFF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0 0 0 1 0 0 0 2 50 100 %_BS
%_0 0 0 1 0 0 0 2 50 100 Bs
0.000092 0 0.000031 0 1 1 1 2 50 0 %_BS
%_0.000092 0 0.000031 0 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Bugaboo)
(Bugaboo) 125.7344 171.4604 459.9473 361.6401 [
%AI3_Tile
(0 O 0 R 0.890806 0.004486 0.109377 0.000092 0 0.729412 0.776471 Xa
 0.890806 0.004486 0.109377 0.000092 0 0.729412 0.776471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
438.3076 133.5688 m
437.2646 130.6626 434.0527 129.145 431.1396 130.1899 c
430.4658 130.4321 414.5605 139.1567 398.5557 146.7935 C
398.1045 145.7485 397.5342 144.7642 396.8369 143.8892 C
443.2588 94.8472 444.4092 93.4819 v
445.3721 92.3394 445.833 90.8882 445.708 89.3979 c
445.5811 87.9019 444.8818 86.5542 443.7393 85.5874 c
442.5938 84.6226 441.1436 84.1616 439.6514 84.2866 c
438.1611 84.4136 436.8066 85.1147 435.8408 86.2554 c
434.6992 87.6147 393.583 140.9868 Y
392.4053 140.2505 391.1084 139.6938 389.7295 139.3657 C
390.8174 108.4487 390.7783 106.8999 v
390.7393 105.4038 390.1182 104.0132 389.0322 102.9819 c
387.9502 101.9507 386.5273 101.4077 385.0313 101.4429 c
384.9189 101.4507 384.8096 101.4526 384.7002 101.4624 c
381.7471 101.7104 379.4971 104.23 379.5732 107.189 c
379.6143 108.7241 384.1045 139.3032 Y
382.9795 139.5396 381.9141 139.9165 380.9248 140.4263 C
355.7344 96.0464 354.5166 94.2769 v
353.377 92.6265 351.4268 91.7065 349.4268 91.8784 c
348.46 91.9604 347.5244 92.2964 346.7217 92.8511 c
345.4912 93.7026 344.6611 94.98 344.3945 96.4526 c
344.124 97.9253 344.4453 99.4136 345.2939 100.646 c
346.5146 102.4077 378.749 141.8267 Y
378.3242 142.1704 377.9268 142.5493 377.5479 142.9419 C
367.3564 132.1743 352.085 116.064 351.2393 115.3511 c
348.876 113.3589 345.3369 113.6558 343.3428 116.0171 c
341.3516 118.3765 341.6514 121.9175 344.0117 123.9106 c
344.8604 124.6235 363.4346 137.0532 375.7666 145.2876 C
375.6416 145.4966 375.5068 145.7036 375.3916 145.9204 C
329.9189 127.6919 328.1748 127.1353 v
327.4658 126.9067 326.7314 126.8228 325.9941 126.8872 c
323.7314 127.0786 321.8203 128.5962 321.1299 130.7603 c
320.6738 132.1841 320.7988 133.7036 321.4814 135.0317 c
322.167 136.3638 323.3301 137.3481 324.7549 137.8052 c
326.4971 138.3638 374.0977 149.7993 Y
373.9326 150.8188 373.874 151.8735 373.9639 152.9497 c
373.9893 153.2427 374.0371 153.5298 374.0811 153.8149 C
336.5654 160.4497 334.6826 160.9849 v
331.7139 161.8286 329.9834 164.9321 330.8271 167.9048 c
331.5586 170.478 334.0205 172.1851 336.6826 171.9595 c
337.04 171.9292 337.3994 171.8657 337.7471 171.7661 c
339.6299 171.231 375.0615 157.1333 Y
375.7314 158.6138 376.6689 159.9438 377.8135 161.0571 C
333.7188 207.3647 332.335 209.0024 v
331.3691 210.147 330.9082 211.5981 331.0342 213.0884 c
331.1611 214.5815 331.8594 215.9331 333.0029 216.8979 c
334.1494 217.8628 335.5986 218.3267 337.0889 218.2007 c
338.5801 218.0737 339.9336 217.3726 340.8975 216.229 c
342.2852 214.5884 379.8408 162.6646 Y
380.3799 163.0122 380.9502 163.3091 381.5342 163.5728 C
374.3486 179.312 362.0068 206.3667 361.7695 207.061 c
360.7646 209.9839 362.3252 213.1792 365.2451 214.1831 c
368.167 215.188 371.3604 213.6294 372.3652 210.7046 c
372.6025 210.0151 379.6357 181.1187 383.7217 164.3091 C
384.6104 164.5298 385.5264 164.688 386.4707 164.7075 C
385.3604 195.7925 385.5205 197.6831 v
385.7803 200.7622 388.4961 203.0552 391.5771 202.7935 c
394.6533 202.5327 396.9463 199.8159 396.6855 196.7378 c
396.5244 194.8374 390.1709 164.2466 Y
391.2881 163.9399 392.335 163.4829 393.3057 162.9087 C
419.6768 209.2485 420.9004 211.0337 v
422.0361 212.6948 423.9932 213.6206 426.001 213.4507 c
426.959 213.3696 427.8877 213.0366 428.6875 212.4897 c
431.2354 210.7427 431.8916 207.2485 430.1426 204.6997 c
428.9189 202.9126 395.3242 161.4263 Y
396.7529 160.145 397.8906 158.5591 398.6357 156.772 C
443.6641 168.5669 445.2119 168.856 v
445.7119 168.9478 446.2197 168.9731 446.7217 168.9302 c
449.2207 168.7192 451.29 166.8501 451.75 164.3813 c
452.0273 162.9106 451.7129 161.4204 450.8691 160.1821 c
450.0234 158.9497 448.748 158.1177 447.2764 157.8423 c
445.7236 157.5493 399.5986 151.4185 Y
399.5908 151.2056 399.5928 150.9946 399.5732 150.7798 c
399.5264 150.2192 399.4277 149.6782 399.3115 149.1411 C
416.4189 144.6138 434.2451 140.981 434.9248 140.7388 c
437.835 139.6899 439.3525 136.479 438.3076 133.5688 c
f
395.9971 151.0825 m
396.4277 156.1685 392.6387 160.6587 387.5518 161.0903 c
382.4629 161.522 377.9717 157.731 377.542 152.645 c
377.1104 147.5552 380.8994 143.0649 385.9883 142.6333 c
391.0752 142.2017 395.5654 145.9907 395.9971 151.0825 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017456 0.160555 0.93521 0.001465 1 0.831373 0 Xa
 0.017456 0.160555 0.93521 0.001465 1 0.831373 0 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
382.8633 142.5532 m
380.5645 146.5259 381.918 151.6294 385.8955 153.936 c
386.8164 154.4692 410.5762 163.5259 434.5879 174.3872 C
433.833 175.9019 433.2656 177.4917 432.9375 179.1255 C
345.1934 173.4009 342.541 173.4009 v
340.3164 173.4009 338.2266 174.2681 336.6533 175.8403 c
335.0781 177.4155 334.2129 179.5044 334.2129 181.7271 c
334.2158 183.9536 335.0791 186.0444 336.6543 187.6196 c
338.2266 189.1909 340.3203 190.0571 342.543 190.0581 c
345.1816 190.0542 432.7617 185.6011 Y
433.0508 187.646 433.6621 189.6528 434.6113 191.5337 C
398.4492 219.9312 396.7275 221.4624 v
395.0645 222.938 394.0811 224.9771 393.9502 227.1968 c
393.8164 229.4165 394.5625 231.5552 396.0381 233.2173 c
396.1523 233.3423 396.2617 233.4634 396.377 233.5796 c
399.4902 236.6919 404.5078 236.8345 407.7969 233.9106 c
409.5 232.3921 439.9316 197.9829 Y
441.2783 199.0337 442.7285 199.8823 444.2578 200.5181 C
417.9873 271.6704 417.1465 274.7505 v
416.3633 277.6274 417.1875 280.7222 419.2979 282.8325 c
420.3184 283.8521 421.5957 284.5923 422.9971 284.9731 c
425.1445 285.5562 427.3906 285.271 429.3184 284.1655 c
431.252 283.0591 432.6348 281.2681 433.2207 279.1216 c
434.0547 276.0464 447.9316 201.645 Y
448.7305 201.8013 449.541 201.8882 450.3516 201.9409 C
447.8887 223.8394 444.2246 256.6304 444.2246 258.2749 c
444.2256 262.8677 447.958 266.606 452.5498 266.606 c
457.1416 266.606 460.877 262.8696 460.877 258.2778 c
460.875 256.6313 457.1895 223.6177 454.7227 201.7163 C
455.082 201.6567 455.4453 201.6128 455.8008 201.5356 C
478.6807 270.6626 479.7197 273.1772 v
480.1416 274.2017 480.749 275.1177 481.5273 275.894 c
483.9141 278.2798 487.4707 278.9946 490.5889 277.7065 c
492.6455 276.8599 494.251 275.2632 495.1045 273.2114 c
495.9619 271.1558 495.9639 268.8931 495.1182 266.8354 c
494.083 264.3188 461.4463 199.2886 Y
462.7646 198.4976 464.0186 197.5562 465.1533 196.4214 c
465.4639 196.1118 465.7412 195.7817 466.0244 195.4575 C
509.5205 231.7153 511.9326 233.3394 v
515.7373 235.9048 520.9248 234.894 523.4912 231.0864 c
525.7119 227.7886 525.29 223.3579 522.4814 220.5493 c
522.1045 220.1733 521.6885 219.8257 521.2412 219.5249 c
518.8291 217.9009 468.8525 191.1636 Y
469.8955 188.981 470.5068 186.644 470.6729 184.2788 C
549.1514 189.979 552.3369 189.9819 v
554.5615 189.9819 556.6533 189.1138 558.2236 187.5425 c
559.7998 185.9673 560.6671 183.8784 560.665 181.6548 c
560.6631 179.4282 559.7998 177.3364 558.2295 175.7651 c
556.6553 174.1938 554.5615 173.3276 552.3389 173.3276 c
549.1455 173.3247 470.5557 180.4331 Y
470.4346 179.4888 470.2256 178.5571 469.9639 177.6372 C
494.7314 170.7153 537.2939 158.8013 538.3096 158.4067 c
542.5928 156.7446 544.7275 151.9106 543.0693 147.6313 c
541.4111 143.3501 536.5791 141.2173 532.2921 142.8774 c
531.2822 143.2681 491.7158 162.9771 468.708 174.4468 C
468.1045 173.2251 467.4033 172.0366 466.5225 170.9438 C
502.8975 142.4106 504.8916 140.4146 v
508.1396 137.1685 508.1416 131.8853 504.8916 128.6372 c
501.6475 125.3911 496.3643 125.3931 493.1162 128.6392 c
491.1123 130.645 462.4521 167.1821 Y
461.0322 166.2075 459.5107 165.4556 457.9287 164.9048 C
480.5537 108.7339 481.4072 105.6323 v
482.207 102.7495 481.3818 99.6401 479.2627 97.521 c
478.2529 96.5112 476.9854 95.7749 475.5967 95.3901 c
471.1689 94.1714 466.5732 96.7749 465.3525 101.2046 c
464.4971 104.3081 454.3096 164.0298 Y
451.4844 163.6372 448.5918 163.8638 445.8496 164.731 C
416.0859 102.2788 414.9316 100.2417 v
414.5586 99.5854 414.0996 98.9839 413.5703 98.4546 c
410.9355 95.8198 406.8271 95.2593 403.5801 97.105 c
401.6465 98.1987 400.2539 99.9858 399.6563 102.1284 c
399.0664 104.271 399.3447 106.5171 400.4434 108.4546 c
401.5977 110.4956 438.8457 168.77 Y
438.6104 168.981 438.3672 169.1841 438.1416 169.4087 c
437.5508 170.0005 437.0293 170.6313 436.5332 171.2778 C
414.9922 156.186 395.1768 140.0649 394.25 139.5259 c
390.2715 137.2251 385.167 138.5806 382.8633 142.5532 c
f
441.9141 173.1821 m
447.2793 167.8169 456.0137 167.8169 461.3779 173.1821 c
466.7471 178.5513 466.7451 187.2847 461.3799 192.6489 c
456.0117 198.0171 447.2803 198.0171 441.9111 192.6489 c
436.5469 187.2847 436.5459 178.5513 441.9141 173.1821 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.348577 0.038972 0.822629 0.002869 0.65098 0.807843 0.223529 Xa
 0.348577 0.038972 0.822629 0.002869 0.65098 0.807843 0.223529 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
562.3193 87.8003 m
559.4287 85.812 555.458 86.5425 553.4639 89.437 c
553.0029 90.1069 536.958 119.2944 527.2568 136.9546 C
526.1475 136.2896 524.9678 135.7622 523.7432 135.4155 C
530.6709 102.7397 530.8291 100.7183 v
530.96 99.0229 530.4229 97.3784 529.3174 96.0874 c
528.21 94.7925 526.6689 94.0093 524.9736 93.8784 c
523.2783 93.7476 521.6318 94.2827 520.3389 95.3901 c
519.0498 96.4937 518.2646 98.0386 518.1299 99.7339 c
517.9775 101.7456 518.8174 134.897 Y
517.2412 134.9985 515.6768 135.3442 514.1865 135.9575 C
494.6807 106.7104 493.6162 105.3081 v
492.5889 103.9526 491.0928 103.0815 489.4092 102.8511 c
487.7246 102.6187 486.0508 103.0601 484.6953 104.0874 c
484.5957 104.1655 484.4961 104.2417 484.3984 104.3237 c
481.8438 106.5112 481.4365 110.3276 483.4727 113.0093 c
484.5293 114.396 508.9541 139.6294 Y
508.0732 140.5942 507.3408 141.6499 506.7646 142.7778 C
454.0869 118.5386 451.7881 117.7163 v
449.6416 116.9487 447.2344 117.394 445.501 118.8765 c
444.6631 119.5952 444.0225 120.5269 443.6494 121.5698 c
443.0771 123.1724 443.1631 124.9019 443.8896 126.436 c
444.6201 127.9761 445.9043 129.1353 447.5039 129.7095 c
449.7979 130.5288 505.6885 145.5103 Y
505.5225 146.1099 505.4092 146.7222 505.3193 147.3384 C
488.7744 144.1636 463.9971 139.4302 462.7432 139.3325 c
459.2422 139.061 456.1709 141.6841 455.8994 145.1841 c
455.6279 148.6851 458.2549 151.7534 461.7549 152.0249 c
463.0088 152.1216 488.3936 151.2651 505.2314 150.686 C
505.2568 150.9614 505.2686 151.2388 505.3076 151.5161 C
477.0361 156.5356 475.0576 157.1802 v
474.251 157.4429 473.5186 157.8501 472.8799 158.396 c
470.9189 160.0757 470.165 162.7437 470.9619 165.1978 c
471.4854 166.8149 472.6084 168.1343 474.1201 168.9067 c
475.6377 169.6821 477.3604 169.8169 478.9795 169.2944 c
480.96 168.6538 506.6846 155.9546 Y
507.21 157.0044 507.8525 158.0161 508.6494 158.9478 c
508.8682 159.2036 509.1045 159.4331 509.333 159.6685 C
479.1221 190.6753 477.7393 192.4194 v
475.5596 195.1675 476.0225 199.1821 478.7744 201.3647 c
481.1553 203.2495 484.5566 203.1938 486.8633 201.2173 c
487.1738 200.9507 487.4629 200.6567 487.7188 200.3345 c
489.0986 198.5903 512.4424 162.0815 Y
514.0421 163.0024 515.7861 163.6089 517.5791 163.8745 C
510.3213 201.0396 510.1318 203.4683 v
509.999 205.1655 510.5361 206.8101 511.6416 208.0991 c
512.749 209.394 514.29 210.1792 515.9854 210.3081 c
517.6826 210.439 519.3271 209.9067 520.6182 208.7993 c
521.9092 207.6958 522.6943 206.1509 522.8271 204.4556 c
523.0166 202.022 520.5186 164.0132 Y
521.2471 163.9751 521.9678 163.8726 522.6865 163.7271 C
526.4951 183.0161 533.0537 216.1636 533.2939 216.9624 c
534.3096 220.3267 537.8662 222.2388 541.2275 221.229 c
544.5889 220.2183 546.501 216.6626 545.4893 213.2974 c
545.251 212.5024 532.5713 181.1763 525.1904 162.9595 C
526.1572 162.5728 527.1064 162.1069 527.9912 161.5005 C
541.4072 183.7534 542.8076 185.3921 v
545.0908 188.0591 549.1162 188.3745 551.7861 186.0894 c
554.4521 183.8081 554.7627 179.7817 552.4814 177.1128 c
551.0713 175.4663 531.1006 158.6206 Y
531.9268 157.5952 532.5908 156.48 533.1025 155.3071 C
571.1826 174.4331 573.4951 175.27 v
575.6436 176.0474 578.0635 175.605 579.8037 174.1167 c
580.6338 173.4058 581.2705 172.4819 581.6436 171.4458 c
582.835 168.144 581.124 164.4868 577.8193 163.2935 c
575.5049 162.4575 533.9834 152.6001 Y
534.4521 150.4702 534.4502 148.2524 533.9502 146.1108 C
568.9033 133.7808 570.5244 133.02 v
571.0459 132.7749 571.5342 132.4614 571.9678 132.0874 c
574.1318 130.2358 574.8018 127.1382 573.5889 124.5542 c
572.8701 123.0161 571.5889 121.8472 569.9912 121.2671 c
568.3936 120.6909 566.665 120.769 565.124 121.4897 c
563.4971 122.2515 531.2861 140.5308 Y
531.1416 140.3403 530.999 140.144 530.8408 139.9565 c
530.4248 139.4722 529.9756 139.0376 529.5127 138.6216 C
542.29 123.0942 563.4873 97.3335 563.9521 96.6597 c
565.9424 93.7612 565.21 89.7905 562.3193 87.8003 c
f
527.7412 142.6108 m
531.5127 147.0181 530.9951 153.6743 526.5889 157.4458 c
522.1787 161.2202 515.5225 160.7036 511.751 156.2964 c
507.9756 151.8862 508.4932 145.229 512.9033 141.4546 c
517.3115 137.6831 523.9678 138.2007 527.7412 142.6108 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.059113 0.895048 0.744228 0.007294 0.929412 0.109804 0.141176 Xa
 0.059113 0.895048 0.744228 0.007294 0.929412 0.109804 0.141176 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
478.1182 222.8276 m
476.0361 221.7632 473.4756 222.5874 472.4072 224.6714 c
472.1631 225.1548 464.0771 245.8228 459.1904 258.3267 C
458.3994 257.9839 457.5732 257.7368 456.7354 257.6128 C
458.4971 235.4272 458.4268 234.0776 v
458.3662 232.9458 457.8701 231.9048 457.0283 231.1479 c
456.1855 230.3882 455.0986 230.0034 453.9678 230.063 c
452.8359 230.1235 451.7939 230.6177 451.0361 231.4604 c
450.2783 232.3013 449.8936 233.3901 449.9512 234.5229 c
450.0234 235.8647 453.4365 257.6948 Y
452.4053 257.8989 451.3994 258.2622 450.4678 258.7954 C
435.0596 241.1538 434.2354 240.3169 v
433.4395 239.5112 432.376 239.0649 431.2432 239.0581 c
430.1094 239.0493 429.042 239.4849 428.2354 240.2788 c
428.1768 240.3413 428.1162 240.3999 428.0605 240.4634 c
426.5615 242.1284 426.6211 244.6841 428.1963 246.2808 c
429.0146 247.1069 447.3271 261.6724 Y
446.8291 262.3862 446.4365 263.146 446.1533 263.9419 C
409.2578 252.4683 407.668 252.1226 v
406.1846 251.8013 404.6318 252.3022 403.6143 253.4321 c
403.123 253.978 402.7803 254.6479 402.6221 255.3696 c
402.3838 256.479 402.5889 257.6138 403.2021 258.5659 c
403.8174 259.519 404.7656 260.1743 405.8721 260.4165 c
407.458 260.7593 445.6768 265.8403 Y
445.6201 266.2495 445.5967 266.6646 445.5918 267.0796 C
434.3857 266.4077 417.6064 265.4165 416.7705 265.4604 c
414.4336 265.5835 412.6299 267.5796 412.7529 269.9165 c
412.876 272.2524 414.876 274.0552 417.2109 273.9321 c
418.0488 273.8872 434.7451 271.1323 445.8213 269.2983 C
445.8623 269.478 445.8936 269.6606 445.9424 269.8403 C
427.6963 275.5942 426.4443 276.1899 v
425.9346 276.4341 425.4863 276.7661 425.1104 277.1821 c
423.9609 278.4604 423.6924 280.2876 424.4297 281.8413 c
424.917 282.8647 425.7715 283.6392 426.8369 284.02 c
427.9063 284.4009 429.0566 284.3413 430.0811 283.8569 c
431.335 283.2622 447.2354 272.6538 Y
447.6729 273.3022 448.1846 273.9165 448.792 274.4624 c
448.958 274.6128 449.1338 274.7437 449.3057 274.8794 C
432.0186 297.9712 431.2549 299.2427 v
430.0518 301.2456 430.7041 303.8589 432.71 305.063 c
434.4463 306.104 436.6885 305.7729 438.042 304.2681 c
438.2236 304.0659 438.3896 303.8462 438.5303 303.6118 c
439.293 302.3394 451.5684 276.2065 Y
452.7041 276.6763 453.9102 276.9272 455.1162 276.9487 C
453.5244 302.1294 453.6094 303.7495 v
453.668 304.8823 454.165 305.9224 455.0068 306.6792 c
455.8496 307.439 456.9355 307.8247 458.0664 307.7642 c
459.1992 307.7046 460.2393 307.2114 460.9971 306.3677 c
461.7549 305.5269 462.1416 304.439 462.083 303.3081 c
461.999 301.6831 457.0713 276.7856 Y
457.5479 276.6978 458.0156 276.5669 458.4775 276.4097 C
462.6592 288.8257 469.8486 310.1606 470.0771 310.6685 c
471.0381 312.8032 473.5518 313.7603 475.6865 312.8032 c
477.8193 311.8462 478.7764 309.3315 477.8174 307.1958 c
477.5908 306.6909 466.5127 287.0874 460.0674 275.687 C
460.6729 275.3481 461.2588 274.9585 461.79 274.4819 C
472.5732 288.0278 473.6396 288.9897 v
475.3779 290.5542 478.0654 290.4165 479.6318 288.6763 c
481.1963 286.939 481.0557 284.2524 479.3174 282.6851 c
478.2451 281.7183 463.5967 272.311 Y
464.0537 271.562 464.3975 270.769 464.6338 269.9487 C
491.4424 279.3032 493.042 279.6558 v
494.5303 279.9839 496.0908 279.4829 497.1123 278.3501 c
497.5986 277.8081 497.9404 277.1431 498.0967 276.4272 c
498.6006 274.1431 497.1533 271.8745 494.8682 271.3696 c
493.2646 271.0181 464.9834 268.0835 Y
465.1084 266.6372 464.917 265.1714 464.4014 263.8003 C
486.4336 252.6401 487.4375 251.9985 v
487.7617 251.7915 488.0566 251.5415 488.3115 251.2563 c
489.5811 249.8462 489.7568 247.7427 488.7334 246.1401 c
488.126 245.1851 487.1777 244.5239 486.0723 244.2769 c
484.9668 244.0347 483.832 244.2349 482.875 244.8462 c
481.8672 245.4888 462.1611 260.3423 Y
462.0479 260.229 461.9385 260.1108 461.8174 260.0015 c
461.501 259.7173 461.165 259.4692 460.8242 259.2349 C
467.9268 247.8726 479.7119 229.0249 479.9619 228.5396 c
481.0264 226.4546 480.2002 223.8931 478.1182 222.8276 c
f
459.9971 262.0239 m
462.8701 264.6099 463.1006 269.0513 460.5156 271.9243 c
457.9268 274.7983 453.4834 275.0298 450.6123 272.4438 c
447.7383 269.855 447.5049 265.4126 450.0947 262.5386 c
452.6807 259.6655 457.124 259.4351 459.9971 262.0239 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017456 0.160555 0.93521 0.001465 1 0.831373 0 Xa
 0.017456 0.160555 0.93521 0.001465 1 0.831373 0 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
215.7568 47.4634 m
213.458 51.436 214.8115 56.5396 218.7891 58.8462 c
219.71 59.3794 243.4697 68.436 267.4814 79.2974 C
266.7266 80.812 266.1592 82.4019 265.8311 84.0356 C
178.0869 78.311 175.4346 78.311 v
173.21 78.311 171.1201 79.1782 169.5474 80.7505 c
167.9717 82.3257 167.1064 84.4146 167.1064 86.6372 c
167.1094 88.8638 167.9731 90.9546 169.5479 92.5298 c
171.1201 94.1011 173.2139 94.9673 175.4365 94.9683 c
178.0752 94.9644 265.6553 90.5112 Y
265.9443 92.5562 266.5557 94.563 267.5049 96.4438 C
231.3428 124.8413 229.6211 126.3726 v
227.958 127.8481 226.9746 129.8872 226.8438 132.1069 c
226.71 134.3267 227.4561 136.4653 228.9316 138.1274 c
229.0459 138.2524 229.1553 138.3735 229.2705 138.4897 c
232.3838 141.6021 237.4014 141.7446 240.6904 138.8208 c
242.3936 137.3022 272.8252 102.8931 Y
274.1719 103.9438 275.6221 104.7925 277.1514 105.4282 C
250.8809 176.5806 250.04 179.6606 v
249.2568 182.5376 250.0811 185.6323 252.1914 187.7427 c
253.2119 188.7622 254.4893 189.5024 255.8906 189.8833 c
258.0381 190.4663 260.2842 190.1812 262.2119 189.0757 c
264.1455 187.9692 265.5283 186.1782 266.1143 184.0317 c
266.9482 180.9565 280.8252 106.5552 Y
281.624 106.7114 282.4346 106.7983 283.2451 106.8511 C
280.7822 128.7495 277.1182 161.5405 277.1182 163.1851 c
277.1191 167.7778 280.8516 171.5161 285.4434 171.5161 c
290.0352 171.5161 293.7705 167.7798 293.7705 163.188 c
293.7686 161.5415 290.083 128.5278 287.6162 106.6265 C
287.9756 106.5669 288.3389 106.5229 288.6943 106.4458 C
311.5747 175.5728 312.6138 178.0874 v
313.0356 179.1118 313.6431 180.0278 314.4209 180.8042 c
316.8076 183.1899 320.3643 183.9048 323.4824 182.6167 c
325.5391 181.77 327.1445 180.1733 327.998 178.1216 c
328.8555 176.0659 328.8574 173.8032 328.0117 171.7456 c
326.9766 169.229 294.3403 104.1987 Y
295.6587 103.4077 296.9126 102.4663 298.0474 101.3315 c
298.3579 101.022 298.6353 100.6919 298.9185 100.3677 C
342.4141 136.6255 344.8262 138.2495 v
348.6309 140.8149 353.8184 139.8042 356.3848 135.9966 c
358.6055 132.6987 358.1836 128.2681 355.375 125.4595 c
354.998 125.0835 354.582 124.7358 354.1348 124.4351 c
351.7227 122.811 301.7466 96.0737 Y
302.7896 93.8911 303.4009 91.5542 303.5669 89.189 C
382.0449 94.8892 385.2305 94.8921 v
387.4551 94.8921 389.5469 94.0239 391.1172 92.4526 c
392.6934 90.8774 393.5605 88.7886 393.5586 86.5649 c
393.5566 84.3384 392.6934 82.2466 391.123 80.6753 c
389.5488 79.104 387.4551 78.2378 385.2324 78.2378 c
382.0391 78.2349 303.4497 85.3433 Y
303.3286 84.3989 303.1196 83.4673 302.8579 82.5474 C
327.625 75.6255 370.1875 63.7114 371.2031 63.3169 c
375.4863 61.6548 377.6211 56.8208 375.9629 52.5415 c
374.3047 48.2603 369.4727 46.1274 365.1855 47.7876 c
364.1758 48.1782 324.6094 67.8872 301.6021 79.3569 C
300.9985 78.1353 300.2974 76.9468 299.4165 75.854 C
335.791 47.3208 337.7852 45.3247 v
341.0332 42.0786 341.0352 36.7954 337.7852 33.5474 c
334.541 30.3013 329.2578 30.3032 326.0098 33.5493 c
324.0059 35.5552 295.3462 72.0923 Y
293.9263 71.1177 292.4043 70.3657 290.8223 69.8149 C
313.4478 13.644 314.3013 10.5425 v
315.1006 7.65967 314.2759 4.55029 312.1567 2.43115 c
311.147 1.42139 309.8794 0.685059 308.4907 0.300293 c
304.063 -0.918457 299.4673 1.68506 298.2466 6.11475 c
297.3911 9.21826 287.2031 68.9399 Y
284.3779 68.5474 281.4854 68.7739 278.7432 69.6411 C
248.9795 7.18896 247.8252 5.15186 v
247.4521 4.49561 246.9932 3.89404 246.4639 3.36475 c
243.8291 0.72998 239.7207 0.169434 236.4736 2.01514 c
234.54 3.10889 233.1475 4.896 232.5498 7.03857 c
231.96 9.18115 232.2383 11.4272 233.3369 13.3647 c
234.4912 15.4058 271.7393 73.6802 Y
271.5039 73.8911 271.2607 74.0942 271.0352 74.3188 c
270.4443 74.9106 269.9229 75.5415 269.4268 76.188 C
247.8857 61.0962 228.0703 44.9751 227.1436 44.436 c
223.165 42.1353 218.0605 43.4907 215.7568 47.4634 c
f
274.8076 78.0923 m
280.1729 72.7271 288.9072 72.7271 294.272 78.0923 c
299.6411 83.4614 299.6392 92.1948 294.2739 97.5591 c
288.9053 102.9272 280.1738 102.9272 274.8047 97.5591 c
269.4404 92.1948 269.4395 83.4614 274.8076 78.0923 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.059113 0.895048 0.744228 0.007294 0.929412 0.109804 0.141176 Xa
 0.059113 0.895048 0.744228 0.007294 0.929412 0.109804 0.141176 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
311.0112 127.7378 m
308.9302 126.6733 306.3687 127.4976 305.3013 129.5815 c
305.0562 130.0649 296.9712 150.7329 292.0835 163.2368 C
291.2935 162.894 290.4673 162.647 289.6289 162.5229 C
291.3901 140.3374 291.3198 138.9878 v
291.2603 137.856 290.7632 136.8149 289.9219 136.0581 c
289.0791 135.2983 287.9927 134.9136 286.8608 134.9731 c
285.7295 135.0337 284.688 135.5278 283.9297 136.3706 c
283.1724 137.2114 282.7871 138.3003 282.8447 139.4331 c
282.917 140.7749 286.3306 162.605 Y
285.2988 162.8091 284.293 163.1724 283.3613 163.7056 C
267.9531 146.064 267.1284 145.2271 v
266.333 144.4214 265.27 143.9751 264.1372 143.9683 c
263.0029 143.9595 261.9355 144.395 261.1289 145.189 c
261.0698 145.2515 261.0103 145.3101 260.9541 145.3735 c
259.4551 147.0386 259.5146 149.5942 261.0898 151.1909 c
261.9082 152.0171 280.2207 166.5825 Y
279.7227 167.2964 279.3306 168.0562 279.0464 168.8521 C
242.1514 157.3784 240.5615 157.0327 v
239.0786 156.7114 237.5254 157.2124 236.5078 158.3423 c
236.0166 158.8882 235.6738 159.5581 235.5161 160.2798 c
235.2778 161.3892 235.4829 162.5239 236.0962 163.4761 c
236.7104 164.4292 237.6592 165.0845 238.7661 165.3267 c
240.3521 165.6694 278.5708 170.7505 Y
278.5142 171.1597 278.4902 171.5747 278.4854 171.9897 C
267.2793 171.3179 250.5005 170.3267 249.6641 170.3706 c
247.3271 170.4937 245.5239 172.4897 245.6465 174.8267 c
245.769 177.1626 247.7695 178.9653 250.1045 178.8423 c
250.9424 178.7974 267.6392 176.0425 278.7148 174.2085 C
278.7563 174.3882 278.7866 174.5708 278.8359 174.7505 C
260.5903 180.5044 259.3384 181.1001 v
258.8286 181.3442 258.3799 181.6763 258.0039 182.0923 c
256.8545 183.3706 256.5854 185.1978 257.3232 186.7515 c
257.8101 187.7749 258.665 188.5493 259.73 188.9302 c
260.7998 189.311 261.9502 189.2515 262.9741 188.7671 c
264.2285 188.1724 280.1294 177.564 Y
280.5669 178.2124 281.0781 178.8267 281.686 179.3726 c
281.8521 179.5229 282.0278 179.6538 282.1997 179.7896 C
264.9116 202.8813 264.1484 204.1528 v
262.9458 206.1558 263.5981 208.769 265.6035 209.9731 c
267.3398 211.0142 269.582 210.6831 270.9355 209.1782 c
271.1172 208.9761 271.2837 208.7563 271.4243 208.522 c
272.1865 207.2495 284.4619 181.1167 Y
285.5981 181.5864 286.8037 181.8374 288.0098 181.8589 C
286.4185 207.0396 286.5029 208.6597 v
286.5615 209.7925 287.0591 210.8325 287.9004 211.5894 c
288.7432 212.3491 289.8291 212.7349 290.96 212.6743 c
292.0928 212.6147 293.1333 212.1216 293.8911 211.2778 c
294.6489 210.437 295.0356 209.3491 294.9761 208.2183 c
294.8921 206.5933 289.9648 181.6958 Y
290.4414 181.6079 290.9092 181.4771 291.3716 181.3198 C
295.5522 193.7358 302.7427 215.0708 302.9702 215.5786 c
303.9312 217.7134 306.4458 218.6704 308.5796 217.7134 c
310.7134 216.7563 311.6694 214.2417 310.7114 212.106 c
310.4849 211.6011 299.4067 191.9976 292.9604 180.5972 C
293.5659 180.2583 294.1528 179.8687 294.6841 179.3921 C
305.4673 192.938 306.5337 193.8999 v
308.272 195.4644 310.9595 195.3267 312.5259 193.5864 c
314.0903 191.8491 313.9487 189.1626 312.2114 187.5952 c
311.1392 186.6284 296.4907 177.2212 Y
296.9478 176.4722 297.2915 175.6792 297.5278 174.8589 C
324.3359 184.2134 325.9355 184.5659 v
327.4238 184.894 328.9844 184.3931 330.0059 183.2603 c
330.4922 182.7183 330.834 182.0532 330.9902 181.3374 c
331.4941 179.0532 330.0469 176.7847 327.7617 176.2798 c
326.1582 175.9282 297.8774 172.9937 Y
298.0024 171.5474 297.8101 170.0815 297.2954 168.7104 C
319.3271 157.5503 320.3311 156.9087 v
320.6553 156.7017 320.9502 156.4517 321.2051 156.1665 c
322.4746 154.7563 322.6504 152.6528 321.627 151.0503 c
321.0195 150.0952 320.0713 149.4341 318.9658 149.187 c
317.8604 148.9448 316.7256 149.145 315.7686 149.7563 c
314.7607 150.3989 295.0542 165.2524 Y
294.9419 165.1392 294.8325 165.021 294.7114 164.9116 c
294.394 164.6274 294.0591 164.3794 293.7178 164.145 C
300.8208 152.7827 312.605 133.9351 312.856 133.4497 c
313.9194 131.3647 313.0933 128.8032 311.0112 127.7378 c
f
292.8906 166.9341 m
295.7642 169.52 295.9946 173.9614 293.4092 176.8345 c
290.8203 179.7085 286.3774 179.9399 283.5059 177.354 c
280.6318 174.7651 280.3989 170.3228 282.9888 167.4487 c
285.5747 164.5757 290.0171 164.3452 292.8906 166.9341 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017456 0.160555 0.93521 0.001465 1 0.831373 0 Xa
 0.017456 0.160555 0.93521 0.001465 1 0.831373 0 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
48.6504 142.5532 m
46.3516 146.5259 47.7051 151.6294 51.6826 153.936 c
52.6035 154.4692 76.3633 163.5259 100.375 174.3872 C
99.6201 175.9019 99.0527 177.4917 98.7246 179.1255 C
10.9805 173.4009 8.32813 173.4009 v
6.10352 173.4009 4.01367 174.2681 2.44092 175.8403 c
0.865234 177.4155 0 179.5044 0 181.7271 c
0.00293 183.9536 0.866699 186.0444 2.44141 187.6196 c
4.01367 189.1909 6.10742 190.0571 8.33008 190.0581 c
10.9688 190.0542 98.5488 185.6011 Y
98.8379 187.646 99.4492 189.6528 100.3984 191.5337 C
64.2363 219.9312 62.5146 221.4624 v
60.8516 222.938 59.8682 224.9771 59.7373 227.1968 c
59.6035 229.4165 60.3496 231.5552 61.8252 233.2173 c
61.9395 233.3423 62.0488 233.4634 62.1641 233.5796 c
65.2773 236.6919 70.2949 236.8345 73.584 233.9106 c
75.2871 232.3921 105.7188 197.9829 Y
107.0654 199.0337 108.5156 199.8823 110.0449 200.5181 C
83.7744 271.6704 82.9336 274.7505 v
82.1504 277.6274 82.9746 280.7222 85.085 282.8325 c
86.1055 283.8521 87.3828 284.5923 88.7842 284.9731 c
90.9316 285.5562 93.1777 285.271 95.1055 284.1655 c
97.0391 283.0591 98.4219 281.2681 99.0078 279.1216 c
99.8418 276.0464 113.7188 201.645 Y
114.5176 201.8013 115.3281 201.8882 116.1387 201.9409 C
113.6758 223.8394 110.0117 256.6304 110.0117 258.2749 c
110.0127 262.8677 113.7451 266.606 118.3369 266.606 c
122.9287 266.606 126.6641 262.8696 126.6641 258.2778 c
126.6621 256.6313 122.9766 223.6177 120.5098 201.7163 C
120.8691 201.6567 121.2324 201.6128 121.5879 201.5356 C
144.4683 270.6626 145.5073 273.1772 v
145.9292 274.2017 146.5366 275.1177 147.3145 275.894 c
149.7012 278.2798 153.2578 278.9946 156.376 277.7065 c
158.4326 276.8599 160.0381 275.2632 160.8916 273.2114 c
161.749 271.1558 161.751 268.8931 160.9053 266.8354 c
159.8701 264.3188 127.2339 199.2886 Y
128.5522 198.4976 129.8062 197.5562 130.9409 196.4214 c
131.2515 196.1118 131.5288 195.7817 131.812 195.4575 C
175.3076 231.7153 177.7197 233.3394 v
181.5244 235.9048 186.7119 234.894 189.2783 231.0864 c
191.499 227.7886 191.0771 223.3579 188.2686 220.5493 c
187.8916 220.1733 187.4756 219.8257 187.0283 219.5249 c
184.6162 217.9009 134.6401 191.1636 Y
135.6831 188.981 136.2944 186.644 136.4604 184.2788 C
214.9385 189.979 218.124 189.9819 v
220.3486 189.9819 222.4404 189.1138 224.0107 187.5425 c
225.5869 185.9673 226.4541 183.8784 226.4521 181.6548 c
226.4502 179.4282 225.5869 177.3364 224.0166 175.7651 c
222.4424 174.1938 220.3486 173.3276 218.126 173.3276 c
214.9326 173.3247 136.3433 180.4331 Y
136.2222 179.4888 136.0132 178.5571 135.7515 177.6372 C
160.5186 170.7153 203.0811 158.8013 204.0967 158.4067 c
208.3799 156.7446 210.5146 151.9106 208.8564 147.6313 c
207.1982 143.3501 202.3662 141.2173 198.0791 142.8774 c
197.0693 143.2681 157.5029 162.9771 134.4956 174.4468 C
133.8921 173.2251 133.1909 172.0366 132.3101 170.9438 C
168.6846 142.4106 170.6787 140.4146 v
173.9268 137.1685 173.9287 131.8853 170.6787 128.6372 c
167.4346 125.3911 162.1514 125.3931 158.9033 128.6392 c
156.8994 130.645 128.2397 167.1821 Y
126.8198 166.2075 125.2979 165.4556 123.7158 164.9048 C
146.3413 108.7339 147.1948 105.6323 v
147.9941 102.7495 147.1694 99.6401 145.0503 97.521 c
144.0405 96.5112 142.7729 95.7749 141.3843 95.3901 c
136.9565 94.1714 132.3608 96.7749 131.1401 101.2046 c
130.2847 104.3081 120.0967 164.0298 Y
117.2715 163.6372 114.3789 163.8638 111.6367 164.731 C
81.873 102.2788 80.7188 100.2417 v
80.3457 99.5854 79.8867 98.9839 79.3574 98.4546 c
76.7227 95.8198 72.6143 95.2593 69.3672 97.105 c
67.4336 98.1987 66.041 99.9858 65.4434 102.1284 c
64.8535 104.271 65.1318 106.5171 66.2305 108.4546 c
67.3848 110.4956 104.6328 168.77 Y
104.3975 168.981 104.1543 169.1841 103.9287 169.4087 c
103.3379 170.0005 102.8164 170.6313 102.3203 171.2778 C
80.7793 156.186 60.9639 140.0649 60.0371 139.5259 c
56.0586 137.2251 50.9541 138.5806 48.6504 142.5532 c
f
107.7012 173.1821 m
113.0664 167.8169 121.8008 167.8169 127.1655 173.1821 c
132.5347 178.5513 132.5327 187.2847 127.1675 192.6489 c
121.7988 198.0171 113.0674 198.0171 107.6982 192.6489 c
102.334 187.2847 102.333 178.5513 107.7012 173.1821 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.348577 0.038972 0.822629 0.002869 0.65098 0.807843 0.223529 Xa
 0.348577 0.038972 0.822629 0.002869 0.65098 0.807843 0.223529 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
228.1064 87.8003 m
225.2158 85.812 221.2451 86.5425 219.251 89.437 c
218.79 90.1069 202.7451 119.2944 193.0439 136.9546 C
191.9346 136.2896 190.7549 135.7622 189.5303 135.4155 C
196.458 102.7397 196.6162 100.7183 v
196.7471 99.0229 196.21 97.3784 195.1045 96.0874 c
193.9971 94.7925 192.4561 94.0093 190.7607 93.8784 c
189.0654 93.7476 187.4189 94.2827 186.126 95.3901 c
184.8369 96.4937 184.0518 98.0386 183.917 99.7339 c
183.7646 101.7456 184.6045 134.897 Y
183.0283 134.9985 181.4639 135.3442 179.9736 135.9575 C
160.4678 106.7104 159.4033 105.3081 v
158.376 103.9526 156.8799 103.0815 155.1963 102.8511 c
153.5117 102.6187 151.8379 103.0601 150.4824 104.0874 c
150.3828 104.1655 150.2832 104.2417 150.1855 104.3237 c
147.6309 106.5112 147.2241 110.3276 149.2598 113.0093 c
150.3164 114.396 174.7412 139.6294 Y
173.8604 140.5942 173.1279 141.6499 172.5518 142.7778 C
119.874 118.5386 117.5752 117.7163 v
115.4292 116.9487 113.0215 117.394 111.2876 118.8765 c
110.4497 119.5952 109.8101 120.5269 109.436 121.5698 c
108.8647 123.1724 108.9497 124.9019 109.6772 126.436 c
110.4072 127.9761 111.6914 129.1353 113.291 129.7095 c
115.5854 130.5288 171.4756 145.5103 Y
171.3096 146.1099 171.1963 146.7222 171.1064 147.3384 C
154.5615 144.1636 129.7837 139.4302 128.5308 139.3325 c
125.0293 139.061 121.9585 141.6841 121.687 145.1841 c
121.415 148.6851 124.042 151.7534 127.5415 152.0249 c
128.7964 152.1216 154.1807 151.2651 171.0186 150.686 C
171.0439 150.9614 171.0557 151.2388 171.0947 151.5161 C
142.8228 156.5356 140.8452 157.1802 v
140.0386 157.4429 139.3052 157.8501 138.6665 158.396 c
136.7065 160.0757 135.9517 162.7437 136.7485 165.1978 c
137.2729 166.8149 138.396 168.1343 139.9067 168.9067 c
141.4243 169.6821 143.1479 169.8169 144.7661 169.2944 c
146.7476 168.6538 172.4717 155.9546 Y
172.9971 157.0044 173.6396 158.0161 174.4365 158.9478 c
174.6553 159.2036 174.8916 159.4331 175.1201 159.6685 C
144.9087 190.6753 143.5269 192.4194 v
141.3472 195.1675 141.8101 199.1821 144.561 201.3647 c
146.9429 203.2495 150.3438 203.1938 152.6504 201.2173 c
152.9609 200.9507 153.25 200.6567 153.5059 200.3345 c
154.8857 198.5903 178.2295 162.0815 Y
179.8291 163.0024 181.5732 163.6089 183.3662 163.8745 C
176.1084 201.0396 175.9189 203.4683 v
175.7861 205.1655 176.3232 206.8101 177.4287 208.0991 c
178.5361 209.394 180.0771 210.1792 181.7725 210.3081 c
183.4697 210.439 185.1143 209.9067 186.4053 208.7993 c
187.6963 207.6958 188.4814 206.1509 188.6143 204.4556 c
188.8037 202.022 186.3057 164.0132 Y
187.0342 163.9751 187.7549 163.8726 188.4736 163.7271 C
192.2822 183.0161 198.8408 216.1636 199.0811 216.9624 c
200.0967 220.3267 203.6533 222.2388 207.0146 221.229 c
210.376 220.2183 212.2881 216.6626 211.2764 213.2974 c
211.0381 212.5024 198.3584 181.1763 190.9775 162.9595 C
191.9443 162.5728 192.8936 162.1069 193.7783 161.5005 C
207.1943 183.7534 208.5947 185.3921 v
210.8779 188.0591 214.9033 188.3745 217.5732 186.0894 c
220.2393 183.8081 220.5498 179.7817 218.2686 177.1128 c
216.8584 175.4663 196.8877 158.6206 Y
197.7139 157.5952 198.3779 156.48 198.8896 155.3071 C
236.9697 174.4331 239.2822 175.27 v
241.4307 176.0474 243.8506 175.605 245.5908 174.1167 c
246.4209 173.4058 247.0576 172.4819 247.4307 171.4458 c
248.6221 168.144 246.9111 164.4868 243.6064 163.2935 c
241.292 162.4575 199.7705 152.6001 Y
200.2393 150.4702 200.2373 148.2524 199.7373 146.1108 C
234.6904 133.7808 236.3115 133.02 v
236.833 132.7749 237.3213 132.4614 237.7549 132.0874 c
239.9189 130.2358 240.5889 127.1382 239.376 124.5542 c
238.6572 123.0161 237.376 121.8472 235.7783 121.2671 c
234.1807 120.6909 232.4521 120.769 230.9111 121.4897 c
229.2842 122.2515 197.0732 140.5308 Y
196.9287 140.3403 196.7861 140.144 196.6279 139.9565 c
196.2119 139.4722 195.7627 139.0376 195.2998 138.6216 C
208.0771 123.0942 229.2744 97.3335 229.7393 96.6597 c
231.7295 93.7612 230.9971 89.7905 228.1064 87.8003 c
f
193.5283 142.6108 m
197.2998 147.0181 196.7822 153.6743 192.376 157.4458 c
187.9658 161.2202 181.3096 160.7036 177.5381 156.2964 c
173.7627 151.8862 174.2803 145.229 178.6904 141.4546 c
183.0986 137.6831 189.7549 138.2007 193.5283 142.6108 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.059113 0.895048 0.744228 0.007294 0.929412 0.109804 0.141176 Xa
 0.059113 0.895048 0.744228 0.007294 0.929412 0.109804 0.141176 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
143.9048 222.8276 m
141.8237 221.7632 139.2622 222.5874 138.1948 224.6714 c
137.9497 225.1548 129.8647 245.8228 124.9771 258.3267 C
124.187 257.9839 123.3608 257.7368 122.5225 257.6128 C
124.2837 235.4272 124.2134 234.0776 v
124.1538 232.9458 123.6567 231.9048 122.8154 231.1479 c
121.9727 230.3882 120.8862 230.0034 119.7544 230.063 c
118.623 230.1235 117.5815 230.6177 116.8232 231.4604 c
116.0659 232.3013 115.6807 233.3901 115.7383 234.5229 c
115.8105 235.8647 119.2241 257.6948 Y
118.1924 257.8989 117.1865 258.2622 116.2549 258.7954 C
100.8467 241.1538 100.022 240.3169 v
99.2266 239.5112 98.1636 239.0649 97.0308 239.0581 c
95.8965 239.0493 94.8291 239.4849 94.0225 240.2788 c
93.9634 240.3413 93.9038 240.3999 93.8477 240.4634 c
92.3486 242.1284 92.4082 244.6841 93.9834 246.2808 c
94.8018 247.1069 113.1143 261.6724 Y
112.6162 262.3862 112.2241 263.146 111.9399 263.9419 C
75.0449 252.4683 73.4551 252.1226 v
71.9722 251.8013 70.4189 252.3022 69.4014 253.4321 c
68.9102 253.978 68.5674 254.6479 68.4097 255.3696 c
68.1714 256.479 68.3765 257.6138 68.9897 258.5659 c
69.604 259.519 70.5527 260.1743 71.6597 260.4165 c
73.2456 260.7593 111.4644 265.8403 Y
111.4077 266.2495 111.3838 266.6646 111.3789 267.0796 C
100.1729 266.4077 83.394 265.4165 82.5576 265.4604 c
80.2207 265.5835 78.4175 267.5796 78.54 269.9165 c
78.6626 272.2524 80.6631 274.0552 82.998 273.9321 c
83.8359 273.8872 100.5327 271.1323 111.6084 269.2983 C
111.6499 269.478 111.6802 269.6606 111.7295 269.8403 C
93.4839 275.5942 92.2319 276.1899 v
91.7222 276.4341 91.2734 276.7661 90.8975 277.1821 c
89.748 278.4604 89.479 280.2876 90.2168 281.8413 c
90.7036 282.8647 91.5586 283.6392 92.6235 284.02 c
93.6934 284.4009 94.8438 284.3413 95.8677 283.8569 c
97.1221 283.2622 113.0229 272.6538 Y
113.4604 273.3022 113.9717 273.9165 114.5796 274.4624 c
114.7456 274.6128 114.9214 274.7437 115.0933 274.8794 C
97.8052 297.9712 97.042 299.2427 v
95.8394 301.2456 96.4917 303.8589 98.4971 305.063 c
100.2334 306.104 102.4756 305.7729 103.8291 304.2681 c
104.0107 304.0659 104.1772 303.8462 104.3179 303.6118 c
105.0801 302.3394 117.3555 276.2065 Y
118.4917 276.6763 119.6973 276.9272 120.9033 276.9487 C
119.312 302.1294 119.3965 303.7495 v
119.4551 304.8823 119.9526 305.9224 120.7939 306.6792 c
121.6367 307.439 122.7227 307.8247 123.8535 307.7642 c
124.9863 307.7046 126.0269 307.2114 126.7847 306.3677 c
127.5425 305.5269 127.9292 304.439 127.8696 303.3081 c
127.7856 301.6831 122.8584 276.7856 Y
123.335 276.6978 123.8027 276.5669 124.2651 276.4097 C
128.4458 288.8257 135.6362 310.1606 135.8638 310.6685 c
136.8247 312.8032 139.3394 313.7603 141.4731 312.8032 c
143.6069 311.8462 144.563 309.3315 143.605 307.1958 c
143.3784 306.6909 132.3003 287.0874 125.854 275.687 C
126.4595 275.3481 127.0464 274.9585 127.5776 274.4819 C
138.3608 288.0278 139.4272 288.9897 v
141.1655 290.5542 143.853 290.4165 145.4194 288.6763 c
146.9839 286.939 146.8423 284.2524 145.105 282.6851 c
144.0327 281.7183 129.3843 272.311 Y
129.8413 271.562 130.1851 270.769 130.4214 269.9487 C
157.2295 279.3032 158.8291 279.6558 v
160.3174 279.9839 161.8779 279.4829 162.8994 278.3501 c
163.3857 277.8081 163.7275 277.1431 163.8838 276.4272 c
164.3877 274.1431 162.9404 271.8745 160.6553 271.3696 c
159.0518 271.0181 130.771 268.0835 Y
130.896 266.6372 130.7036 265.1714 130.189 263.8003 C
152.2207 252.6401 153.2246 251.9985 v
153.5488 251.7915 153.8438 251.5415 154.0986 251.2563 c
155.3682 249.8462 155.5439 247.7427 154.5205 246.1401 c
153.9131 245.1851 152.9648 244.5239 151.8594 244.2769 c
150.7539 244.0347 149.6191 244.2349 148.6621 244.8462 c
147.6543 245.4888 127.9478 260.3423 Y
127.8354 260.229 127.7261 260.1108 127.605 260.0015 c
127.2876 259.7173 126.9526 259.4692 126.6113 259.2349 C
133.7144 247.8726 145.4985 229.0249 145.7495 228.5396 c
146.813 226.4546 145.9868 223.8931 143.9048 222.8276 c
f
125.7842 262.0239 m
128.6577 264.6099 128.8882 269.0513 126.3027 271.9243 c
123.7139 274.7983 119.271 275.0298 116.3994 272.4438 c
113.5254 269.855 113.2925 265.4126 115.8823 262.5386 c
118.4683 259.6655 122.9106 259.4351 125.7842 262.0239 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.890806 0.004486 0.109377 0.000092 0 0.729412 0.776471 Xa
 0.890806 0.004486 0.109377 0.000092 0 0.729412 0.776471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
438.3076 323.7485 m
437.2646 320.8423 434.0527 319.3247 431.1396 320.3696 c
430.4658 320.6118 414.5605 329.3364 398.5557 336.9731 C
398.1045 335.9282 397.5342 334.9438 396.8369 334.0688 C
443.2588 285.0269 444.4092 283.6616 v
445.3721 282.519 445.833 281.0679 445.708 279.5776 c
445.5811 278.0815 444.8818 276.7339 443.7393 275.7671 c
442.5938 274.8022 441.1436 274.3413 439.6514 274.4663 c
438.1611 274.5933 436.8066 275.2944 435.8408 276.4351 c
434.6992 277.7944 393.583 331.1665 Y
392.4053 330.4302 391.1084 329.8735 389.7295 329.5454 C
390.8174 298.6284 390.7783 297.0796 v
390.7393 295.5835 390.1182 294.1929 389.0322 293.1616 c
387.9502 292.1304 386.5273 291.5874 385.0313 291.6226 c
384.9189 291.6304 384.8096 291.6323 384.7002 291.6421 c
381.7471 291.8901 379.4971 294.4097 379.5732 297.3687 c
379.6143 298.9038 384.1045 329.4829 Y
382.9795 329.7192 381.9141 330.0962 380.9248 330.606 C
355.7344 286.2261 354.5166 284.4565 v
353.377 282.8062 351.4268 281.8862 349.4268 282.0581 c
348.46 282.1401 347.5244 282.4761 346.7217 283.0308 c
345.4912 283.8823 344.6611 285.1597 344.3945 286.6323 c
344.124 288.105 344.4453 289.5933 345.2939 290.8257 c
346.5146 292.5874 378.749 332.0063 Y
378.3242 332.3501 377.9268 332.729 377.5479 333.1216 C
367.3564 322.354 352.085 306.2437 351.2393 305.5308 c
348.876 303.5386 345.3369 303.8354 343.3428 306.1968 c
341.3516 308.5562 341.6514 312.0972 344.0117 314.0903 c
344.8604 314.8032 363.4346 327.2329 375.7666 335.4673 C
375.6416 335.6763 375.5068 335.8833 375.3916 336.1001 C
329.9189 317.8716 328.1748 317.3149 v
327.4658 317.0864 326.7314 317.0024 325.9941 317.0669 c
323.7314 317.2583 321.8203 318.7759 321.1299 320.9399 c
320.6738 322.3638 320.7988 323.8833 321.4814 325.2114 c
322.167 326.5435 323.3301 327.5278 324.7549 327.9849 c
326.4971 328.5435 374.0977 339.979 Y
373.9326 340.9985 373.874 342.0532 373.9639 343.1294 c
373.9893 343.4224 374.0371 343.7095 374.0811 343.9946 C
336.5654 350.6294 334.6826 351.1646 v
331.7139 352.0083 329.9834 355.1118 330.8271 358.0845 c
331.5586 360.6577 334.0205 362.3647 336.6826 362.1392 c
337.04 362.1089 337.3994 362.0454 337.7471 361.9458 c
339.6299 361.4106 375.0615 347.313 Y
375.7314 348.7935 376.6689 350.1235 377.8135 351.2368 C
333.7188 397.5444 332.335 399.1821 v
331.3691 400.3267 330.9082 401.7778 331.0342 403.2681 c
331.1611 404.7612 331.8594 406.1128 333.0029 407.0776 c
334.1494 408.0425 335.5986 408.5063 337.0889 408.3804 c
338.5801 408.2534 339.9336 407.5522 340.8975 406.4087 c
342.2852 404.7681 379.8408 352.8442 Y
380.3799 353.1919 380.9502 353.4888 381.5342 353.7524 C
374.3486 369.4917 362.0068 396.5464 361.7695 397.2407 c
360.7646 400.1636 362.3252 403.3589 365.2451 404.3628 c
368.167 405.3677 371.3604 403.8091 372.3652 400.8843 c
372.6025 400.1948 379.6357 371.2983 383.7217 354.4888 C
384.6104 354.7095 385.5264 354.8677 386.4707 354.8872 C
385.3604 385.9722 385.5205 387.8628 v
385.7803 390.9419 388.4961 393.2349 391.5771 392.9731 c
394.6533 392.7124 396.9463 389.9956 396.6855 386.9175 c
396.5244 385.0171 390.1709 354.4263 Y
391.2881 354.1196 392.335 353.6626 393.3057 353.0884 C
419.6768 399.4282 420.9004 401.2134 v
422.0361 402.8745 423.9932 403.8003 426.001 403.6304 c
426.959 403.5493 427.8877 403.2163 428.6875 402.6694 c
431.2354 400.9224 431.8916 397.4282 430.1426 394.8794 c
428.9189 393.0923 395.3242 351.606 Y
396.7529 350.3247 397.8906 348.7388 398.6357 346.9517 C
443.6641 358.7466 445.2119 359.0356 v
445.7119 359.1274 446.2197 359.1528 446.7217 359.1099 c
449.2207 358.8989 451.29 357.0298 451.75 354.561 c
452.0273 353.0903 451.7129 351.6001 450.8691 350.3618 c
450.0234 349.1294 448.748 348.2974 447.2764 348.022 c
445.7236 347.729 399.5986 341.5981 Y
399.5908 341.3853 399.5928 341.1743 399.5732 340.9595 c
399.5264 340.3989 399.4277 339.8579 399.3115 339.3208 C
416.4189 334.7935 434.2451 331.1606 434.9248 330.9185 c
437.835 329.8696 439.3525 326.6587 438.3076 323.7485 c
f
395.9971 341.2622 m
396.4277 346.3481 392.6387 350.8384 387.5518 351.27 c
382.4629 351.7017 377.9717 347.9106 377.542 342.8247 c
377.1104 337.7349 380.8994 333.2446 385.9883 332.813 c
391.0752 332.3813 395.5654 336.1704 395.9971 341.2622 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017456 0.160555 0.93521 0.001465 1 0.831373 0 Xa
 0.017456 0.160555 0.93521 0.001465 1 0.831373 0 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
382.8633 332.7329 m
380.5645 336.7056 381.918 341.8091 385.8955 344.1157 c
386.8164 344.6489 410.5762 353.7056 434.5879 364.5669 C
433.833 366.0815 433.2656 367.6714 432.9375 369.3052 C
345.1934 363.5806 342.541 363.5806 v
340.3164 363.5806 338.2266 364.4478 336.6533 366.02 c
335.0781 367.5952 334.2129 369.6841 334.2129 371.9067 c
334.2158 374.1333 335.0791 376.2241 336.6543 377.7993 c
338.2266 379.3706 340.3203 380.2368 342.543 380.2378 c
345.1816 380.2339 432.7617 375.7808 Y
433.0508 377.8257 433.6621 379.8325 434.6113 381.7134 C
398.4492 410.1108 396.7275 411.6421 v
395.0645 413.1177 394.0811 415.1567 393.9502 417.3765 c
393.8164 419.5962 394.5625 421.7349 396.0381 423.397 c
396.1523 423.522 396.2617 423.6431 396.377 423.7593 c
399.4902 426.8716 404.5078 427.0142 407.7969 424.0903 c
409.5 422.5718 439.9316 388.1626 Y
441.2783 389.2134 442.7285 390.062 444.2578 390.6978 C
417.9873 461.8501 417.1465 464.9302 v
416.3633 467.8071 417.1875 470.9019 419.2979 473.0122 c
420.3184 474.0317 421.5957 474.772 422.9971 475.1528 c
425.1445 475.7358 427.3906 475.4507 429.3184 474.3452 c
431.252 473.2388 432.6348 471.4478 433.2207 469.3013 c
434.0547 466.2261 447.9316 391.8247 Y
448.7305 391.981 449.541 392.0679 450.3516 392.1206 C
447.8887 414.019 444.2246 446.8101 444.2246 448.4546 c
444.2256 453.0474 447.958 456.7856 452.5498 456.7856 c
457.1416 456.7856 460.877 453.0493 460.877 448.4575 c
460.875 446.811 457.1895 413.7974 454.7227 391.896 C
455.082 391.8364 455.4453 391.7925 455.8008 391.7153 C
478.6807 460.8423 479.7197 463.3569 v
480.1416 464.3813 480.749 465.2974 481.5273 466.0737 c
483.9141 468.4595 487.4707 469.1743 490.5889 467.8862 c
492.6455 467.0396 494.251 465.4429 495.1045 463.3911 c
495.9619 461.3354 495.9639 459.0728 495.1182 457.0151 c
494.083 454.4985 461.4463 389.4683 Y
462.7646 388.6772 464.0186 387.7358 465.1533 386.6011 c
465.4639 386.2915 465.7412 385.9614 466.0244 385.6372 C
509.5205 421.895 511.9326 423.519 v
515.7373 426.0845 520.9248 425.0737 523.4912 421.2661 c
525.7119 417.9683 525.29 413.5376 522.4814 410.729 c
522.1045 410.353 521.6885 410.0054 521.2412 409.7046 c
518.8291 408.0806 468.8525 381.3433 Y
469.8955 379.1606 470.5068 376.8237 470.6729 374.4585 C
549.1514 380.1587 552.3369 380.1616 v
554.5615 380.1616 556.6533 379.2935 558.2236 377.7222 c
559.7998 376.147 560.6671 374.0581 560.665 371.8345 c
560.6631 369.6079 559.7998 367.5161 558.2295 365.9448 c
556.6553 364.3735 554.5615 363.5073 552.3389 363.5073 c
549.1455 363.5044 470.5557 370.6128 Y
470.4346 369.6685 470.2256 368.7368 469.9639 367.8169 C
494.7314 360.895 537.2939 348.981 538.3096 348.5864 c
542.5928 346.9243 544.7275 342.0903 543.0693 337.811 c
541.4111 333.5298 536.5791 331.397 532.2921 333.0571 c
531.2822 333.4478 491.7158 353.1567 468.708 364.6265 C
468.1045 363.4048 467.4033 362.2163 466.5225 361.1235 C
502.8975 332.5903 504.8916 330.5942 v
508.1396 327.3481 508.1416 322.0649 504.8916 318.8169 c
501.6475 315.5708 496.3643 315.5728 493.1162 318.8188 c
491.1123 320.8247 462.4521 357.3618 Y
461.0322 356.3872 459.5107 355.6353 457.9287 355.0845 C
480.5537 298.9136 481.4072 295.812 v
482.207 292.9292 481.3818 289.8198 479.2627 287.7007 c
478.2529 286.6909 476.9854 285.9546 475.5967 285.5698 c
471.1689 284.3511 466.5732 286.9546 465.3525 291.3843 c
464.4971 294.4878 454.3096 354.2095 Y
451.4844 353.8169 448.5918 354.0435 445.8496 354.9106 C
416.0859 292.4585 414.9316 290.4214 v
414.5586 289.7651 414.0996 289.1636 413.5703 288.6343 c
410.9355 285.9995 406.8271 285.439 403.5801 287.2847 c
401.6465 288.3784 400.2539 290.1655 399.6563 292.3081 c
399.0664 294.4507 399.3447 296.6968 400.4434 298.6343 c
401.5977 300.6753 438.8457 358.9497 Y
438.6104 359.1606 438.3672 359.3638 438.1416 359.5884 c
437.5508 360.1802 437.0293 360.811 436.5332 361.4575 C
414.9922 346.3657 395.1768 330.2446 394.25 329.7056 c
390.2715 327.4048 385.167 328.7603 382.8633 332.7329 c
f
441.9141 363.3618 m
447.2793 357.9966 456.0137 357.9966 461.3779 363.3618 c
466.7471 368.731 466.7451 377.4644 461.3799 382.8286 c
456.0117 388.1968 447.2803 388.1968 441.9111 382.8286 c
436.5469 377.4644 436.5459 368.731 441.9141 363.3618 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.348577 0.038972 0.822629 0.002869 0.65098 0.807843 0.223529 Xa
 0.348577 0.038972 0.822629 0.002869 0.65098 0.807843 0.223529 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
562.3193 277.98 m
559.4287 275.9917 555.458 276.7222 553.4639 279.6167 c
553.0029 280.2866 536.958 309.4741 527.2568 327.1343 C
526.1475 326.4692 524.9678 325.9419 523.7432 325.5952 C
530.6709 292.9194 530.8291 290.8979 v
530.96 289.2026 530.4229 287.5581 529.3174 286.2671 c
528.21 284.9722 526.6689 284.189 524.9736 284.0581 c
523.2783 283.9272 521.6318 284.4624 520.3389 285.5698 c
519.0498 286.6733 518.2646 288.2183 518.1299 289.9136 c
517.9775 291.9253 518.8174 325.0767 Y
517.2412 325.1782 515.6768 325.5239 514.1865 326.1372 C
494.6807 296.8901 493.6162 295.4878 v
492.5889 294.1323 491.0928 293.2612 489.4092 293.0308 c
487.7246 292.7983 486.0508 293.2397 484.6953 294.2671 c
484.5957 294.3452 484.4961 294.4214 484.3984 294.5034 c
481.8438 296.6909 481.4365 300.5073 483.4727 303.189 c
484.5293 304.5757 508.9541 329.8091 Y
508.0732 330.7739 507.3408 331.8296 506.7646 332.9575 C
454.0869 308.7183 451.7881 307.896 v
449.6416 307.1284 447.2344 307.5737 445.501 309.0562 c
444.6631 309.7749 444.0225 310.7065 443.6494 311.7495 c
443.0771 313.3521 443.1631 315.0815 443.8896 316.6157 c
444.6201 318.1558 445.9043 319.3149 447.5039 319.8892 c
449.7979 320.7085 505.6885 335.6899 Y
505.5225 336.2896 505.4092 336.9019 505.3193 337.5181 C
488.7744 334.3433 463.9971 329.6099 462.7432 329.5122 c
459.2422 329.2407 456.1709 331.8638 455.8994 335.3638 c
455.6279 338.8647 458.2549 341.9331 461.7549 342.2046 c
463.0088 342.3013 488.3936 341.4448 505.2314 340.8657 C
505.2568 341.1411 505.2686 341.4185 505.3076 341.6958 C
477.0361 346.7153 475.0576 347.3599 v
474.251 347.6226 473.5186 348.0298 472.8799 348.5757 c
470.9189 350.2554 470.165 352.9233 470.9619 355.3774 c
471.4854 356.9946 472.6084 358.314 474.1201 359.0864 c
475.6377 359.8618 477.3604 359.9966 478.9795 359.4741 c
480.96 358.8335 506.6846 346.1343 Y
507.21 347.1841 507.8525 348.1958 508.6494 349.1274 c
508.8682 349.3833 509.1045 349.6128 509.333 349.8481 C
479.1221 380.855 477.7393 382.5991 v
475.5596 385.3472 476.0225 389.3618 478.7744 391.5444 c
481.1553 393.4292 484.5566 393.3735 486.8633 391.397 c
487.1738 391.1304 487.4629 390.8364 487.7188 390.5142 c
489.0986 388.77 512.4424 352.2612 Y
514.0421 353.1821 515.7861 353.7886 517.5791 354.0542 C
510.3213 391.2192 510.1318 393.6479 v
509.999 395.3452 510.5361 396.9897 511.6416 398.2788 c
512.749 399.5737 514.29 400.3589 515.9854 400.4878 c
517.6826 400.6187 519.3271 400.0864 520.6182 398.979 c
521.9092 397.8755 522.6943 396.3306 522.8271 394.6353 c
523.0166 392.2017 520.5186 354.1929 Y
521.2471 354.1548 521.9678 354.0522 522.6865 353.9067 C
526.4951 373.1958 533.0537 406.3433 533.2939 407.1421 c
534.3096 410.5063 537.8662 412.4185 541.2275 411.4087 c
544.5889 410.3979 546.501 406.8423 545.4893 403.4771 c
545.251 402.6821 532.5713 371.356 525.1904 353.1392 C
526.1572 352.7524 527.1064 352.2866 527.9912 351.6802 C
541.4072 373.9331 542.8076 375.5718 v
545.0908 378.2388 549.1162 378.5542 551.7861 376.269 c
554.4521 373.9878 554.7627 369.9614 552.4814 367.2925 c
551.0713 365.646 531.1006 348.8003 Y
531.9268 347.7749 532.5908 346.6597 533.1025 345.4868 C
571.1826 364.6128 573.4951 365.4497 v
575.6436 366.2271 578.0635 365.7847 579.8037 364.2964 c
580.6338 363.5854 581.2705 362.6616 581.6436 361.6255 c
582.835 358.3237 581.124 354.6665 577.8193 353.4731 c
575.5049 352.6372 533.9834 342.7798 Y
534.4521 340.6499 534.4502 338.4321 533.9502 336.2905 C
568.9033 323.9604 570.5244 323.1997 v
571.0459 322.9546 571.5342 322.6411 571.9678 322.2671 c
574.1318 320.4155 574.8018 317.3179 573.5889 314.7339 c
572.8701 313.1958 571.5889 312.0269 569.9912 311.4468 c
568.3936 310.8706 566.665 310.9487 565.124 311.6694 c
563.4971 312.4312 531.2861 330.7104 Y
531.1416 330.52 530.999 330.3237 530.8408 330.1362 c
530.4248 329.6519 529.9756 329.2173 529.5127 328.8013 C
542.29 313.2739 563.4873 287.5132 563.9521 286.8394 c
565.9424 283.9409 565.21 279.9702 562.3193 277.98 c
f
527.7412 332.7905 m
531.5127 337.1978 530.9951 343.854 526.5889 347.6255 c
522.1787 351.3999 515.5225 350.8833 511.751 346.4761 c
507.9756 342.0659 508.4932 335.4087 512.9033 331.6343 c
517.3115 327.8628 523.9678 328.3804 527.7412 332.7905 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.890806 0.004486 0.109377 0.000092 0 0.729412 0.776471 Xa
 0.890806 0.004486 0.109377 0.000092 0 0.729412 0.776471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
271.2012 228.6587 m
270.1577 225.7524 266.9463 224.2349 264.0332 225.2798 c
263.3599 225.522 247.4541 234.2466 231.4497 241.8833 C
230.9985 240.8384 230.4272 239.854 229.73 238.979 C
276.1519 189.937 277.3022 188.5718 v
278.2656 187.4292 278.7271 185.978 278.6011 184.4878 c
278.4746 182.9917 277.7759 181.644 276.6333 180.6772 c
275.4873 179.7124 274.0371 179.2515 272.5444 179.3765 c
271.0542 179.5034 269.7002 180.2046 268.7339 181.3452 c
267.5928 182.7046 226.4766 236.0767 Y
225.2993 235.3403 224.0015 234.7837 222.6235 234.4556 C
223.7104 203.5386 223.6714 201.9897 v
223.6323 200.4937 223.0112 199.103 221.9258 198.0718 c
220.8433 197.0405 219.4209 196.4976 217.9248 196.5327 c
217.812 196.5405 217.7026 196.5425 217.5933 196.5522 c
214.6406 196.8003 212.3901 199.3198 212.4663 202.2788 c
212.5083 203.814 216.998 234.3931 Y
215.873 234.6294 214.8076 235.0063 213.8179 235.5161 C
188.6279 191.1362 187.4102 189.3667 v
186.2705 187.7163 184.3203 186.7964 182.3203 186.9683 c
181.353 187.0503 180.4185 187.3862 179.6152 187.9409 c
178.3843 188.7925 177.5552 190.0698 177.2881 191.5425 c
177.0171 193.0151 177.3389 194.5034 178.188 195.7358 c
179.4077 197.4976 211.6431 236.9165 Y
211.2178 237.2603 210.8203 237.6392 210.4419 238.0317 C
200.2505 227.2642 184.9785 211.1538 184.1323 210.4409 c
181.77 208.4487 178.23 208.7456 176.2368 211.1069 c
174.2451 213.4663 174.5449 217.0073 176.9053 219.0005 c
177.7539 219.7134 196.3281 232.1431 208.6606 240.3774 C
208.5356 240.5864 208.4004 240.7935 208.2856 241.0103 C
162.813 222.7817 161.0684 222.2251 v
160.3589 221.9966 159.6245 221.9126 158.8877 221.9771 c
156.6255 222.1685 154.7139 223.686 154.0234 225.8501 c
153.5674 227.2739 153.6924 228.7935 154.375 230.1216 c
155.0601 231.4536 156.2236 232.438 157.6479 232.895 c
159.3911 233.4536 206.9912 244.8892 Y
206.8267 245.9087 206.7671 246.9634 206.8579 248.0396 c
206.8828 248.3325 206.9307 248.6196 206.9741 248.9048 C
169.459 255.5396 167.5757 256.0747 v
164.6069 256.9185 162.8765 260.022 163.7202 262.9946 c
164.4521 265.5679 166.9136 267.2749 169.5757 267.0493 c
169.9336 267.019 170.293 266.9556 170.6411 266.856 c
172.5229 266.3208 207.9551 252.2231 Y
208.6255 253.7036 209.562 255.0337 210.7065 256.147 C
166.6123 302.4546 165.228 304.0923 v
164.2627 305.2368 163.8018 306.688 163.9277 308.1782 c
164.0542 309.6714 164.7529 311.0229 165.897 311.9878 c
167.043 312.9526 168.4917 313.4165 169.9824 313.2905 c
171.4736 313.1636 172.8271 312.4624 173.791 311.3188 c
175.1787 309.6782 212.7344 257.7544 Y
213.2734 258.1021 213.8438 258.3989 214.4282 258.6626 C
207.2427 274.4019 194.9004 301.4565 194.6631 302.1509 c
193.6582 305.0737 195.2188 308.269 198.1387 309.2729 c
201.0601 310.2778 204.2544 308.7192 205.2588 305.7944 c
205.4961 305.105 212.5293 276.2085 216.6152 259.3989 C
217.5044 259.6196 218.4194 259.7778 219.3643 259.7974 C
218.2534 290.8823 218.4136 292.7729 v
218.6743 295.8521 221.3896 298.145 224.4702 297.8833 c
227.5474 297.6226 229.8398 294.9058 229.5791 291.8276 c
229.418 289.9272 223.0645 259.3364 Y
224.1816 259.0298 225.229 258.5728 226.1997 257.9985 C
252.5708 304.3384 253.7939 306.1235 v
254.9302 307.7847 256.8862 308.7104 258.895 308.5405 c
259.8525 308.4595 260.7808 308.1265 261.5811 307.5796 c
264.1284 305.8325 264.7852 302.3384 263.0361 299.7896 c
261.813 298.0024 228.2178 256.5161 Y
229.6465 255.2349 230.7842 253.6489 231.5288 251.8618 C
276.5576 263.6567 278.105 263.9458 v
278.6055 264.0376 279.1128 264.063 279.6152 264.02 c
282.1143 263.8091 284.1841 261.9399 284.6436 259.4712 c
284.9209 258.0005 284.6064 256.5103 283.7627 255.272 c
282.917 254.0396 281.6416 253.2075 280.1699 252.9321 c
278.6177 252.6392 232.4917 246.5083 Y
232.4839 246.2954 232.4858 246.0845 232.4673 245.8696 c
232.4199 245.3091 232.3213 244.7681 232.2051 244.231 C
249.312 239.7036 267.1392 236.0708 267.8184 235.8286 c
270.728 234.7798 272.2461 231.5688 271.2012 228.6587 c
f
228.8901 246.1724 m
229.3213 251.2583 225.5322 255.7485 220.4448 256.1802 c
215.3564 256.6118 210.8657 252.8208 210.4351 247.7349 c
210.0034 242.645 213.793 238.1548 218.8818 237.7231 c
223.9688 237.2915 228.459 241.0806 228.8901 246.1724 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017456 0.160555 0.93521 0.001465 1 0.831373 0 Xa
 0.017456 0.160555 0.93521 0.001465 1 0.831373 0 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
215.7568 237.6431 m
213.458 241.6157 214.8115 246.7192 218.7891 249.0259 c
219.71 249.5591 243.4697 258.6157 267.4814 269.4771 C
266.7266 270.9917 266.1592 272.5815 265.8311 274.2153 C
178.0869 268.4907 175.4346 268.4907 v
173.21 268.4907 171.1201 269.3579 169.5474 270.9302 c
167.9717 272.5054 167.1064 274.5942 167.1064 276.8169 c
167.1094 279.0435 167.9731 281.1343 169.5479 282.7095 c
171.1201 284.2808 173.2139 285.147 175.4365 285.1479 c
178.0752 285.144 265.6553 280.6909 Y
265.9443 282.7358 266.5557 284.7427 267.5049 286.6235 C
231.3428 315.021 229.6211 316.5522 v
227.958 318.0278 226.9746 320.0669 226.8438 322.2866 c
226.71 324.5063 227.4561 326.645 228.9316 328.3071 c
229.0459 328.4321 229.1553 328.5532 229.2705 328.6694 c
232.3838 331.7817 237.4014 331.9243 240.6904 329.0005 c
242.3936 327.4819 272.8252 293.0728 Y
274.1719 294.1235 275.6221 294.9722 277.1514 295.6079 C
250.8809 366.7603 250.04 369.8403 v
249.2568 372.7173 250.0811 375.812 252.1914 377.9224 c
253.2119 378.9419 254.4893 379.6821 255.8906 380.063 c
258.0381 380.646 260.2842 380.3608 262.2119 379.2554 c
264.1455 378.1489 265.5283 376.3579 266.1143 374.2114 c
266.9482 371.1362 280.8252 296.7349 Y
281.624 296.8911 282.4346 296.978 283.2451 297.0308 C
280.7822 318.9292 277.1182 351.7202 277.1182 353.3647 c
277.1191 357.9575 280.8516 361.6958 285.4434 361.6958 c
290.0352 361.6958 293.7705 357.9595 293.7705 353.3677 c
293.7686 351.7212 290.083 318.7075 287.6162 296.8062 C
287.9756 296.7466 288.3389 296.7026 288.6943 296.6255 C
311.5747 365.7524 312.6138 368.2671 v
313.0356 369.2915 313.6431 370.2075 314.4209 370.9839 c
316.8076 373.3696 320.3643 374.0845 323.4824 372.7964 c
325.5391 371.9497 327.1445 370.353 327.998 368.3013 c
328.8555 366.2456 328.8574 363.9829 328.0117 361.9253 c
326.9766 359.4087 294.3403 294.3784 Y
295.6587 293.5874 296.9126 292.646 298.0474 291.5112 c
298.3579 291.2017 298.6353 290.8716 298.9185 290.5474 C
342.4141 326.8052 344.8262 328.4292 v
348.6309 330.9946 353.8184 329.9839 356.3848 326.1763 c
358.6055 322.8784 358.1836 318.4478 355.375 315.6392 c
354.998 315.2632 354.582 314.9155 354.1348 314.6147 c
351.7227 312.9907 301.7466 286.2534 Y
302.7896 284.0708 303.4009 281.7339 303.5669 279.3687 C
382.0449 285.0688 385.2305 285.0718 v
387.4551 285.0718 389.5469 284.2036 391.1172 282.6323 c
392.6934 281.0571 393.5605 278.9683 393.5586 276.7446 c
393.5566 274.5181 392.6934 272.4263 391.123 270.855 c
389.5488 269.2837 387.4551 268.4175 385.2324 268.4175 c
382.0391 268.4146 303.4497 275.5229 Y
303.3286 274.5786 303.1196 273.647 302.8579 272.7271 C
327.625 265.8052 370.1875 253.8911 371.2031 253.4966 c
375.4863 251.8345 377.6211 247.0005 375.9629 242.7212 c
374.3047 238.4399 369.4727 236.3071 365.1855 237.9673 c
364.1758 238.3579 324.6094 258.0669 301.6021 269.5366 C
300.9985 268.3149 300.2974 267.1265 299.4165 266.0337 C
335.791 237.5005 337.7852 235.5044 v
341.0332 232.2583 341.0352 226.9751 337.7852 223.7271 c
334.541 220.481 329.2578 220.4829 326.0098 223.729 c
324.0059 225.7349 295.3462 262.272 Y
293.9263 261.2974 292.4043 260.5454 290.8223 259.9946 C
313.4478 203.8237 314.3013 200.7222 v
315.1006 197.8394 314.2759 194.73 312.1567 192.6108 c
311.147 191.6011 309.8794 190.8647 308.4907 190.48 c
304.063 189.2612 299.4673 191.8647 298.2466 196.2944 c
297.3911 199.3979 287.2031 259.1196 Y
284.3779 258.7271 281.4854 258.9536 278.7432 259.8208 C
248.9795 197.3687 247.8252 195.3315 v
247.4521 194.6753 246.9932 194.0737 246.4639 193.5444 c
243.8291 190.9097 239.7207 190.3491 236.4736 192.1948 c
234.54 193.2886 233.1475 195.0757 232.5498 197.2183 c
231.96 199.3608 232.2383 201.6069 233.3369 203.5444 c
234.4912 205.5854 271.7393 263.8599 Y
271.5039 264.0708 271.2607 264.2739 271.0352 264.4985 c
270.4443 265.0903 269.9229 265.7212 269.4268 266.3677 C
247.8857 251.2759 228.0703 235.1548 227.1436 234.6157 c
223.165 232.3149 218.0605 233.6704 215.7568 237.6431 c
f
274.8076 268.272 m
280.1729 262.9067 288.9072 262.9067 294.272 268.272 c
299.6411 273.6411 299.6392 282.3745 294.2739 287.7388 c
288.9053 293.1069 280.1738 293.1069 274.8047 287.7388 c
269.4404 282.3745 269.4395 273.6411 274.8076 268.272 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.348577 0.038972 0.822629 0.002869 0.65098 0.807843 0.223529 Xa
 0.348577 0.038972 0.822629 0.002869 0.65098 0.807843 0.223529 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
395.2129 182.8901 m
392.3223 180.9019 388.3516 181.6323 386.3574 184.5269 c
385.8965 185.1968 369.8516 214.3843 360.1504 232.0444 C
359.041 231.3794 357.8613 230.8521 356.6367 230.5054 C
363.5645 197.8296 363.7227 195.8081 v
363.8535 194.1128 363.3164 192.4683 362.2109 191.1772 c
361.1035 189.8823 359.5625 189.0991 357.8672 188.9683 c
356.1719 188.8374 354.5254 189.3726 353.2324 190.48 c
351.9434 191.5835 351.1582 193.1284 351.0234 194.8237 c
350.8711 196.8354 351.7109 229.9868 Y
350.1348 230.0884 348.5703 230.4341 347.0801 231.0474 C
327.5742 201.8003 326.5098 200.3979 v
325.4824 199.0425 323.9863 198.1714 322.3027 197.9409 c
320.6182 197.7085 318.9443 198.1499 317.5889 199.1772 c
317.4893 199.2554 317.3896 199.3315 317.292 199.4136 c
314.7373 201.6011 314.3306 205.4175 316.3662 208.0991 c
317.4229 209.4858 341.8477 234.7192 Y
340.9668 235.6841 340.2344 236.7397 339.6582 237.8677 C
286.9805 213.6284 284.6816 212.8062 v
282.5356 212.0386 280.1279 212.4839 278.394 213.9663 c
277.5562 214.6851 276.9165 215.6167 276.5425 216.6597 c
275.9712 218.2622 276.0562 219.9917 276.7837 221.5259 c
277.5137 223.0659 278.7979 224.2251 280.3975 224.7993 c
282.6919 225.6187 338.582 240.6001 Y
338.416 241.1997 338.3027 241.812 338.2129 242.4282 C
321.668 239.2534 296.8901 234.52 295.6372 234.4224 c
292.1357 234.1509 289.0649 236.7739 288.7935 240.2739 c
288.5215 243.7749 291.1484 246.8433 294.6479 247.1147 c
295.9028 247.2114 321.2871 246.355 338.125 245.7759 C
338.1504 246.0513 338.1621 246.3286 338.2012 246.606 C
309.9292 251.6255 307.9517 252.27 v
307.145 252.5327 306.4116 252.9399 305.7729 253.4858 c
303.813 255.1655 303.0581 257.8335 303.855 260.2876 c
304.3794 261.9048 305.5024 263.2241 307.0132 263.9966 c
308.5308 264.772 310.2544 264.9067 311.8726 264.3843 c
313.854 263.7437 339.5781 251.0444 Y
340.1035 252.0942 340.7461 253.106 341.543 254.0376 c
341.7617 254.2935 341.998 254.5229 342.2266 254.7583 C
312.0151 285.7651 310.6333 287.5093 v
308.4536 290.2573 308.9165 294.272 311.6675 296.4546 c
314.0493 298.3394 317.4502 298.2837 319.7568 296.3071 c
320.0674 296.0405 320.3564 295.7466 320.6123 295.4243 c
321.9922 293.6802 345.3359 257.1714 Y
346.9355 258.0923 348.6797 258.6987 350.4727 258.9644 C
343.2148 296.1294 343.0254 298.5581 v
342.8926 300.2554 343.4297 301.8999 344.5352 303.189 c
345.6426 304.4839 347.1836 305.269 348.8789 305.3979 c
350.5762 305.5288 352.2207 304.9966 353.5117 303.8892 c
354.8027 302.7856 355.5879 301.2407 355.7207 299.5454 c
355.9102 297.1118 353.4121 259.103 Y
354.1406 259.0649 354.8613 258.9624 355.5801 258.8169 C
359.3887 278.106 365.9473 311.2534 366.1875 312.0522 c
367.2031 315.4165 370.7598 317.3286 374.1211 316.3188 c
377.4824 315.3081 379.3945 311.7524 378.3828 308.3872 c
378.1445 307.5923 365.4648 276.2661 358.084 258.0493 C
359.0508 257.6626 360 257.1968 360.8848 256.5903 C
374.3008 278.8433 375.7012 280.4819 v
377.9844 283.1489 382.0098 283.4644 384.6797 281.1792 c
387.3457 278.8979 387.6563 274.8716 385.375 272.2026 c
383.9648 270.5562 363.9941 253.7104 Y
364.8203 252.6851 365.4844 251.5698 365.9961 250.397 C
404.0762 269.5229 406.3887 270.3599 v
408.5371 271.1372 410.957 270.6948 412.6973 269.2065 c
413.5273 268.4956 414.1641 267.5718 414.5371 266.5356 c
415.7285 263.2339 414.0176 259.5767 410.7129 258.3833 c
408.3984 257.5474 366.877 247.6899 Y
367.3457 245.5601 367.3438 243.3423 366.8438 241.2007 C
401.7969 228.8706 403.418 228.1099 v
403.9395 227.8647 404.4277 227.5513 404.8613 227.1772 c
407.0254 225.3257 407.6953 222.228 406.4824 219.644 c
405.7637 218.106 404.4824 216.937 402.8848 216.3569 c
401.2871 215.7808 399.5586 215.8589 398.0176 216.5796 c
396.3906 217.3413 364.1797 235.6206 Y
364.0352 235.4302 363.8926 235.2339 363.7344 235.0464 c
363.3184 234.562 362.8691 234.1274 362.4063 233.7114 C
375.1836 218.1841 396.3809 192.4233 396.8457 191.7495 c
398.8359 188.8511 398.1035 184.8804 395.2129 182.8901 c
f
360.6348 237.7007 m
364.4063 242.1079 363.8887 248.7642 359.4824 252.5356 c
355.0723 256.3101 348.416 255.7935 344.6445 251.3862 c
340.8691 246.9761 341.3867 240.3188 345.7969 236.5444 c
350.2051 232.7729 356.8613 233.2905 360.6348 237.7007 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.059113 0.895048 0.744228 0.007294 0.929412 0.109804 0.141176 Xa
 0.059113 0.895048 0.744228 0.007294 0.929412 0.109804 0.141176 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
311.0112 317.9175 m
308.9302 316.853 306.3687 317.6772 305.3013 319.7612 c
305.0562 320.2446 296.9712 340.9126 292.0835 353.4165 C
291.2935 353.0737 290.4673 352.8267 289.6289 352.7026 C
291.3901 330.5171 291.3198 329.1675 v
291.2603 328.0356 290.7632 326.9946 289.9219 326.2378 c
289.0791 325.478 287.9927 325.0933 286.8608 325.1528 c
285.7295 325.2134 284.688 325.7075 283.9297 326.5503 c
283.1724 327.3911 282.7871 328.48 282.8447 329.6128 c
282.917 330.9546 286.3306 352.7847 Y
285.2988 352.9888 284.293 353.3521 283.3613 353.8853 C
267.9531 336.2437 267.1284 335.4067 v
266.333 334.6011 265.27 334.1548 264.1372 334.1479 c
263.0029 334.1392 261.9355 334.5747 261.1289 335.3687 c
261.0698 335.4312 261.0103 335.4897 260.9541 335.5532 c
259.4551 337.2183 259.5146 339.7739 261.0898 341.3706 c
261.9082 342.1968 280.2207 356.7622 Y
279.7227 357.4761 279.3306 358.2358 279.0464 359.0317 C
242.1514 347.5581 240.5615 347.2124 v
239.0786 346.8911 237.5254 347.3921 236.5078 348.522 c
236.0166 349.0679 235.6738 349.7378 235.5161 350.4595 c
235.2778 351.5688 235.4829 352.7036 236.0962 353.6558 c
236.7104 354.6089 237.6592 355.2642 238.7661 355.5063 c
240.3521 355.8491 278.5708 360.9302 Y
278.5142 361.3394 278.4902 361.7544 278.4854 362.1694 C
267.2793 361.4976 250.5005 360.5063 249.6641 360.5503 c
247.3271 360.6733 245.5239 362.6694 245.6465 365.0063 c
245.769 367.3423 247.7695 369.145 250.1045 369.022 c
250.9424 368.9771 267.6392 366.2222 278.7148 364.3882 C
278.7563 364.5679 278.7866 364.7505 278.8359 364.9302 C
260.5903 370.6841 259.3384 371.2798 v
258.8286 371.5239 258.3799 371.856 258.0039 372.272 c
256.8545 373.5503 256.5854 375.3774 257.3232 376.9312 c
257.8101 377.9546 258.665 378.729 259.73 379.1099 c
260.7998 379.4907 261.9502 379.4312 262.9741 378.9468 c
264.2285 378.3521 280.1294 367.7437 Y
280.5669 368.3921 281.0781 369.0063 281.686 369.5522 c
281.8521 369.7026 282.0278 369.8335 282.1997 369.9692 C
264.9116 393.061 264.1484 394.3325 v
262.9458 396.3354 263.5981 398.9487 265.6035 400.1528 c
267.3398 401.1938 269.582 400.8628 270.9355 399.3579 c
271.1172 399.1558 271.2837 398.936 271.4243 398.7017 c
272.1865 397.4292 284.4619 371.2964 Y
285.5981 371.7661 286.8037 372.0171 288.0098 372.0386 C
286.4185 397.2192 286.5029 398.8394 v
286.5615 399.9722 287.0591 401.0122 287.9004 401.769 c
288.7432 402.5288 289.8291 402.9146 290.96 402.854 c
292.0928 402.7944 293.1333 402.3013 293.8911 401.4575 c
294.6489 400.6167 295.0356 399.5288 294.9761 398.3979 c
294.8921 396.7729 289.9648 371.8755 Y
290.4414 371.7876 290.9092 371.6567 291.3716 371.4995 C
295.5522 383.9155 302.7427 405.2505 302.9702 405.7583 c
303.9312 407.8931 306.4458 408.8501 308.5796 407.8931 c
310.7134 406.936 311.6694 404.4214 310.7114 402.2856 c
310.4849 401.7808 299.4067 382.1772 292.9604 370.7769 C
293.5659 370.438 294.1528 370.0483 294.6841 369.5718 C
305.4673 383.1177 306.5337 384.0796 v
308.272 385.644 310.9595 385.5063 312.5259 383.7661 c
314.0903 382.0288 313.9487 379.3423 312.2114 377.7749 c
311.1392 376.8081 296.4907 367.4009 Y
296.9478 366.6519 297.2915 365.8589 297.5278 365.0386 C
324.3359 374.3931 325.9355 374.7456 v
327.4238 375.0737 328.9844 374.5728 330.0059 373.4399 c
330.4922 372.8979 330.834 372.2329 330.9902 371.5171 c
331.4941 369.2329 330.0469 366.9644 327.7617 366.4595 c
326.1582 366.1079 297.8774 363.1733 Y
298.0024 361.7271 297.8101 360.2612 297.2954 358.8901 C
319.3271 347.73 320.3311 347.0884 v
320.6553 346.8813 320.9502 346.6313 321.2051 346.3462 c
322.4746 344.936 322.6504 342.8325 321.627 341.23 c
321.0195 340.2749 320.0713 339.6138 318.9658 339.3667 c
317.8604 339.1245 316.7256 339.3247 315.7686 339.936 c
314.7607 340.5786 295.0542 355.4321 Y
294.9419 355.3188 294.8325 355.2007 294.7114 355.0913 c
294.394 354.8071 294.0591 354.5591 293.7178 354.3247 C
300.8208 342.9624 312.605 324.1147 312.856 323.6294 c
313.9194 321.5444 313.0933 318.9829 311.0112 317.9175 c
f
292.8906 357.1138 m
295.7642 359.6997 295.9946 364.1411 293.4092 367.0142 c
290.8203 369.8882 286.3774 370.1196 283.5059 367.5337 c
280.6318 364.9448 280.3989 360.5024 282.9888 357.6284 c
285.5747 354.7554 290.0171 354.5249 292.8906 357.1138 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017456 0.160555 0.93521 0.001465 1 0.831373 0 Xa
 0.017456 0.160555 0.93521 0.001465 1 0.831373 0 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
48.6504 332.7329 m
46.3516 336.7056 47.7051 341.8091 51.6826 344.1157 c
52.6035 344.6489 76.3633 353.7056 100.375 364.5669 C
99.6201 366.0815 99.0527 367.6714 98.7246 369.3052 C
10.9805 363.5806 8.32813 363.5806 v
6.10352 363.5806 4.01367 364.4478 2.44092 366.02 c
0.865234 367.5952 0 369.6841 0 371.9067 c
0.00293 374.1333 0.866699 376.2241 2.44141 377.7993 c
4.01367 379.3706 6.10742 380.2368 8.33008 380.2378 c
10.9688 380.2339 98.5488 375.7808 Y
98.8379 377.8257 99.4492 379.8325 100.3984 381.7134 C
64.2363 410.1108 62.5146 411.6421 v
60.8516 413.1177 59.8682 415.1567 59.7373 417.3765 c
59.6035 419.5962 60.3496 421.7349 61.8252 423.397 c
61.9395 423.522 62.0488 423.6431 62.1641 423.7593 c
65.2773 426.8716 70.2949 427.0142 73.584 424.0903 c
75.2871 422.5718 105.7188 388.1626 Y
107.0654 389.2134 108.5156 390.062 110.0449 390.6978 C
83.7744 461.8501 82.9336 464.9302 v
82.1504 467.8071 82.9746 470.9019 85.085 473.0122 c
86.1055 474.0317 87.3828 474.772 88.7842 475.1528 c
90.9316 475.7358 93.1777 475.4507 95.1055 474.3452 c
97.0391 473.2388 98.4219 471.4478 99.0078 469.3013 c
99.8418 466.2261 113.7188 391.8247 Y
114.5176 391.981 115.3281 392.0679 116.1387 392.1206 C
113.6758 414.019 110.0117 446.8101 110.0117 448.4546 c
110.0127 453.0474 113.7451 456.7856 118.3369 456.7856 c
122.9287 456.7856 126.6641 453.0493 126.6641 448.4575 c
126.6621 446.811 122.9766 413.7974 120.5098 391.896 C
120.8691 391.8364 121.2324 391.7925 121.5879 391.7153 C
144.4683 460.8423 145.5073 463.3569 v
145.9292 464.3813 146.5366 465.2974 147.3145 466.0737 c
149.7012 468.4595 153.2578 469.1743 156.376 467.8862 c
158.4326 467.0396 160.0381 465.4429 160.8916 463.3911 c
161.749 461.3354 161.751 459.0728 160.9053 457.0151 c
159.8701 454.4985 127.2339 389.4683 Y
128.5522 388.6772 129.8062 387.7358 130.9409 386.6011 c
131.2515 386.2915 131.5288 385.9614 131.812 385.6372 C
175.3076 421.895 177.7197 423.519 v
181.5244 426.0845 186.7119 425.0737 189.2783 421.2661 c
191.499 417.9683 191.0771 413.5376 188.2686 410.729 c
187.8916 410.353 187.4756 410.0054 187.0283 409.7046 c
184.6162 408.0806 134.6401 381.3433 Y
135.6831 379.1606 136.2944 376.8237 136.4604 374.4585 C
214.9385 380.1587 218.124 380.1616 v
220.3486 380.1616 222.4404 379.2935 224.0107 377.7222 c
225.5869 376.147 226.4541 374.0581 226.4521 371.8345 c
226.4502 369.6079 225.5869 367.5161 224.0166 365.9448 c
222.4424 364.3735 220.3486 363.5073 218.126 363.5073 c
214.9326 363.5044 136.3433 370.6128 Y
136.2222 369.6685 136.0132 368.7368 135.7515 367.8169 C
160.5186 360.895 203.0811 348.981 204.0967 348.5864 c
208.3799 346.9243 210.5146 342.0903 208.8564 337.811 c
207.1982 333.5298 202.3662 331.397 198.0791 333.0571 c
197.0693 333.4478 157.5029 353.1567 134.4956 364.6265 C
133.8921 363.4048 133.1909 362.2163 132.3101 361.1235 C
168.6846 332.5903 170.6787 330.5942 v
173.9268 327.3481 173.9287 322.0649 170.6787 318.8169 c
167.4346 315.5708 162.1514 315.5728 158.9033 318.8188 c
156.8994 320.8247 128.2397 357.3618 Y
126.8198 356.3872 125.2979 355.6353 123.7158 355.0845 C
146.3413 298.9136 147.1948 295.812 v
147.9941 292.9292 147.1694 289.8198 145.0503 287.7007 c
144.0405 286.6909 142.7729 285.9546 141.3843 285.5698 c
136.9565 284.3511 132.3608 286.9546 131.1401 291.3843 c
130.2847 294.4878 120.0967 354.2095 Y
117.2715 353.8169 114.3789 354.0435 111.6367 354.9106 C
81.873 292.4585 80.7188 290.4214 v
80.3457 289.7651 79.8867 289.1636 79.3574 288.6343 c
76.7227 285.9995 72.6143 285.439 69.3672 287.2847 c
67.4336 288.3784 66.041 290.1655 65.4434 292.3081 c
64.8535 294.4507 65.1318 296.6968 66.2305 298.6343 c
67.3848 300.6753 104.6328 358.9497 Y
104.3975 359.1606 104.1543 359.3638 103.9287 359.5884 c
103.3379 360.1802 102.8164 360.811 102.3203 361.4575 C
80.7793 346.3657 60.9639 330.2446 60.0371 329.7056 c
56.0586 327.4048 50.9541 328.7603 48.6504 332.7329 c
f
107.7012 363.3618 m
113.0664 357.9966 121.8008 357.9966 127.1655 363.3618 c
132.5347 368.731 132.5327 377.4644 127.1675 382.8286 c
121.7988 388.1968 113.0674 388.1968 107.6982 382.8286 c
102.334 377.4644 102.333 368.731 107.7012 363.3618 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.348577 0.038972 0.822629 0.002869 0.65098 0.807843 0.223529 Xa
 0.348577 0.038972 0.822629 0.002869 0.65098 0.807843 0.223529 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
228.1064 277.98 m
225.2158 275.9917 221.2451 276.7222 219.251 279.6167 c
218.79 280.2866 202.7451 309.4741 193.0439 327.1343 C
191.9346 326.4692 190.7549 325.9419 189.5303 325.5952 C
196.458 292.9194 196.6162 290.8979 v
196.7471 289.2026 196.21 287.5581 195.1045 286.2671 c
193.9971 284.9722 192.4561 284.189 190.7607 284.0581 c
189.0654 283.9272 187.4189 284.4624 186.126 285.5698 c
184.8369 286.6733 184.0518 288.2183 183.917 289.9136 c
183.7646 291.9253 184.6045 325.0767 Y
183.0283 325.1782 181.4639 325.5239 179.9736 326.1372 C
160.4678 296.8901 159.4033 295.4878 v
158.376 294.1323 156.8799 293.2612 155.1963 293.0308 c
153.5117 292.7983 151.8379 293.2397 150.4824 294.2671 c
150.3828 294.3452 150.2832 294.4214 150.1855 294.5034 c
147.6309 296.6909 147.2241 300.5073 149.2598 303.189 c
150.3164 304.5757 174.7412 329.8091 Y
173.8604 330.7739 173.1279 331.8296 172.5518 332.9575 C
119.874 308.7183 117.5752 307.896 v
115.4292 307.1284 113.0215 307.5737 111.2876 309.0562 c
110.4497 309.7749 109.8101 310.7065 109.436 311.7495 c
108.8647 313.3521 108.9497 315.0815 109.6772 316.6157 c
110.4072 318.1558 111.6914 319.3149 113.291 319.8892 c
115.5854 320.7085 171.4756 335.6899 Y
171.3096 336.2896 171.1963 336.9019 171.1064 337.5181 C
154.5615 334.3433 129.7837 329.6099 128.5308 329.5122 c
125.0293 329.2407 121.9585 331.8638 121.687 335.3638 c
121.415 338.8647 124.042 341.9331 127.5415 342.2046 c
128.7964 342.3013 154.1807 341.4448 171.0186 340.8657 C
171.0439 341.1411 171.0557 341.4185 171.0947 341.6958 C
142.8228 346.7153 140.8452 347.3599 v
140.0386 347.6226 139.3052 348.0298 138.6665 348.5757 c
136.7065 350.2554 135.9517 352.9233 136.7485 355.3774 c
137.2729 356.9946 138.396 358.314 139.9067 359.0864 c
141.4243 359.8618 143.1479 359.9966 144.7661 359.4741 c
146.7476 358.8335 172.4717 346.1343 Y
172.9971 347.1841 173.6396 348.1958 174.4365 349.1274 c
174.6553 349.3833 174.8916 349.6128 175.1201 349.8481 C
144.9087 380.855 143.5269 382.5991 v
141.3472 385.3472 141.8101 389.3618 144.561 391.5444 c
146.9429 393.4292 150.3438 393.3735 152.6504 391.397 c
152.9609 391.1304 153.25 390.8364 153.5059 390.5142 c
154.8857 388.77 178.2295 352.2612 Y
179.8291 353.1821 181.5732 353.7886 183.3662 354.0542 C
176.1084 391.2192 175.9189 393.6479 v
175.7861 395.3452 176.3232 396.9897 177.4287 398.2788 c
178.5361 399.5737 180.0771 400.3589 181.7725 400.4878 c
183.4697 400.6187 185.1143 400.0864 186.4053 398.979 c
187.6963 397.8755 188.4814 396.3306 188.6143 394.6353 c
188.8037 392.2017 186.3057 354.1929 Y
187.0342 354.1548 187.7549 354.0522 188.4736 353.9067 C
192.2822 373.1958 198.8408 406.3433 199.0811 407.1421 c
200.0967 410.5063 203.6533 412.4185 207.0146 411.4087 c
210.376 410.3979 212.2881 406.8423 211.2764 403.4771 c
211.0381 402.6821 198.3584 371.356 190.9775 353.1392 C
191.9443 352.7524 192.8936 352.2866 193.7783 351.6802 C
207.1943 373.9331 208.5947 375.5718 v
210.8779 378.2388 214.9033 378.5542 217.5732 376.269 c
220.2393 373.9878 220.5498 369.9614 218.2686 367.2925 c
216.8584 365.646 196.8877 348.8003 Y
197.7139 347.7749 198.3779 346.6597 198.8896 345.4868 C
236.9697 364.6128 239.2822 365.4497 v
241.4307 366.2271 243.8506 365.7847 245.5908 364.2964 c
246.4209 363.5854 247.0576 362.6616 247.4307 361.6255 c
248.6221 358.3237 246.9111 354.6665 243.6064 353.4731 c
241.292 352.6372 199.7705 342.7798 Y
200.2393 340.6499 200.2373 338.4321 199.7373 336.2905 C
234.6904 323.9604 236.3115 323.1997 v
236.833 322.9546 237.3213 322.6411 237.7549 322.2671 c
239.9189 320.4155 240.5889 317.3179 239.376 314.7339 c
238.6572 313.1958 237.376 312.0269 235.7783 311.4468 c
234.1807 310.8706 232.4521 310.9487 230.9111 311.6694 c
229.2842 312.4312 197.0732 330.7104 Y
196.9287 330.52 196.7861 330.3237 196.6279 330.1362 c
196.2119 329.6519 195.7627 329.2173 195.2998 328.8013 C
208.0771 313.2739 229.2744 287.5132 229.7393 286.8394 c
231.7295 283.9409 230.9971 279.9702 228.1064 277.98 c
f
193.5283 332.7905 m
197.2998 337.1978 196.7822 343.854 192.376 347.6255 c
187.9658 351.3999 181.3096 350.8833 177.5381 346.4761 c
173.7627 342.0659 174.2803 335.4087 178.6904 331.6343 c
183.0986 327.8628 189.7549 328.3804 193.5283 332.7905 c
f
*U
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed Brush Pattern 5)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7951 7871 m
-7927.1226 7871 L
-7927.1226 7847.1206 L
-7951 7847.1206 L
-7951 7871 L
n
u
1 Ap
0 O
0.026947 0.307683 0.912016 0.003052 0.984314 0.682353 0.090196 Xa
10 M-7945.5498 7858.0225 m
-7942.5391 7858.0225 -7940.0986 7855.5825 -7940.0986 7852.5718 c
-7940.0986 7849.5625 -7942.5391 7847.1206 -7945.5498 7847.1206 c
-7948.5601 7847.1206 -7951 7849.5625 -7951 7852.5718 c
-7951 7855.5825 -7948.5601 7858.0225 -7945.5498 7858.0225 c
f
0.516258 0.674983 0 0 0.498039 0.278431 0.866667 Xa
-7932.5718 7858.0225 m
-7929.5625 7858.0225 -7927.1226 7855.5825 -7927.1226 7852.5718 c
-7927.1226 7849.5625 -7929.5625 7847.1206 -7932.5718 7847.1206 c
-7935.5835 7847.1206 -7938.0234 7849.5625 -7938.0234 7852.5718 c
-7938.0234 7855.5825 -7935.5835 7858.0225 -7932.5718 7858.0225 c
f
-7945.5498 7871 m
-7942.5391 7871 -7940.0986 7868.5596 -7940.0986 7865.5488 c
-7940.0986 7862.5391 -7942.5391 7860.0977 -7945.5498 7860.0977 c
-7948.5601 7860.0977 -7951 7862.5391 -7951 7865.5488 c
-7951 7868.5596 -7948.5601 7871 -7945.5498 7871 c
f
0.026947 0.307683 0.912016 0.003052 0.984314 0.682353 0.090196 Xa
-7932.5718 7871 m
-7929.5625 7871 -7927.1226 7868.5596 -7927.1226 7865.5488 c
-7927.1226 7862.5391 -7929.5625 7860.0977 -7932.5718 7860.0977 c
-7935.5835 7860.0977 -7938.0234 7862.5391 -7938.0234 7865.5488 c
-7938.0234 7868.5596 -7935.5835 7871 -7932.5718 7871 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pattern 7)0 A
u
0 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7951 7871 m
-7927.1226 7871 L
-7927.1226 7847.1206 L
-7951 7847.1206 L
-7951 7871 L
n
u
1 Ap
0 O
0.452644 0.139528 0.990814 0.025544 0.533333 0.658824 0.05098 Xa
10 M-7945.5498 7858.0225 m
-7942.5391 7858.0225 -7940.0986 7855.5825 -7940.0986 7852.5718 c
-7940.0986 7849.5625 -7942.5391 7847.1206 -7945.5498 7847.1206 c
-7948.5601 7847.1206 -7951 7849.5625 -7951 7852.5718 c
-7951 7855.5825 -7948.5601 7858.0225 -7945.5498 7858.0225 c
f
0.516258 0.674983 0 0 0.498039 0.278431 0.866667 Xa
-7932.5718 7858.0225 m
-7929.5625 7858.0225 -7927.1226 7855.5825 -7927.1226 7852.5718 c
-7927.1226 7849.5625 -7929.5625 7847.1206 -7932.5718 7847.1206 c
-7935.5835 7847.1206 -7938.0234 7849.5625 -7938.0234 7852.5718 c
-7938.0234 7855.5825 -7935.5835 7858.0225 -7932.5718 7858.0225 c
f
-7945.5498 7871 m
-7942.5391 7871 -7940.0986 7868.5596 -7940.0986 7865.5488 c
-7940.0986 7862.5391 -7942.5391 7860.0977 -7945.5498 7860.0977 c
-7948.5601 7860.0977 -7951 7862.5391 -7951 7865.5488 c
-7951 7868.5596 -7948.5601 7871 -7945.5498 7871 c
f
0.452644 0.139528 0.990814 0.025544 0.533333 0.658824 0.05098 Xa
-7932.5718 7871 m
-7929.5625 7871 -7927.1226 7868.5596 -7927.1226 7865.5488 c
-7927.1226 7862.5391 -7929.5625 7860.0977 -7932.5718 7860.0977 c
-7935.5835 7860.0977 -7938.0234 7862.5391 -7938.0234 7865.5488 c
-7938.0234 7868.5596 -7935.5835 7871 -7932.5718 7871 c
f
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Calligraphi) -
(c Brush Tool/ 10 pt. Round/ Adobe Calligraphic Brush Tool/ 5 p) -
(t. Flat/ Adobe PatternOnPath Brush Tool/ Dashed Circles/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(10 pt. Round)
(1 10 10 100 100 0 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Dashed Circles)
(1 / Unnamed Brush Pattern 5/ Unnamed Brush Pattern 7/ Unnamed ) -
(Brush Pattern 7/ / / 5 0.878431 0.831373 0 /  1 0 1 0 2 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0 0 0 1 ([Registration]) 0 Xs
([Registration])
Pc
0.000092 0 0.000031 0 1 1 1 Xa
(White)
Pc
0 0 0 1 0 0 0 Xa
(Black)
Pc
0.013123 0.959808 0.914061 0.001068 1 0 0 Xa
(RGB Red)
Pc
0.030335 0.019226 0.913237 0.000061 1 1 0 Xa
(RGB Yellow)
Pc
0.9252 0 1 0 0 1 0 Xa
(RGB Green)
Pc
0.834195 0 0 0 0 1 1 Xa
(RGB Cyan)
Pc
0.955352 0.928405 0 0 0 0 1 Xa
(RGB Blue)
Pc
0.006714 0.953582 0 0 1 0 1 Xa
(RGB Magenta)
Pc
0.187686 0.840085 0.678401 0.059022 0.756863 0.152941 0.176471 Xa
(R=193 G=39 B=45)
Pc
0.059113 0.895048 0.744228 0.007294 0.929412 0.109804 0.141176 Xa
(R=237 G=28 B=36)
Pc
0.052033 0.639673 0.803098 0.004089 0.945098 0.352941 0.141176 Xa
(R=241 G=90 B=36)
Pc
0.039216 0.412909 0.852903 0.003418 0.968627 0.576471 0.117647 Xa
(R=247 G=147 B=30)
Pc
0.019532 0.304326 0.729457 0.002228 0.984314 0.690196 0.231373 Xa
(R=251 G=176 B=59)
Pc
0.022065 0.056611 0.871794 0.000885 0.988235 0.933333 0.129412 Xa
(R=252 G=238 B=33)
Pc
0.145449 0.058991 0.912413 0.005463 0.85098 0.878431 0.129412 Xa
(R=217 G=224 B=33)
Pc
0.451972 0.040162 0.812741 0.002991 0.54902 0.776471 0.247059 Xa
(R=140 G=198 B=63)
Pc
0.796048 0.002228 0.856443 0.000061 0.223529 0.709804 0.290196 Xa
(R=57 G=181 B=74)
Pc
0.926329 0.042237 0.875608 0.00528 0 0.572549 0.270588 Xa
(R=0 G=146 B=69)
Pc
0.956115 0.215549 0.870726 0.076356 0 0.407843 0.215686 Xa
(R=0 G=104 B=55)
Pc
0.866087 0.000183 0.634211 0 0.133333 0.709804 0.45098 Xa
(R=34 G=181 B=115)
Pc
0.914427 0.01944 0.321355 0.002075 0 0.662745 0.615686 Xa
(R=0 G=169 B=157)
Pc
0.846891 0.061891 0 0 0.160784 0.670588 0.886275 Xa
(R=41 G=171 B=226)
Pc
0.929107 0.326452 0.023255 0.002655 0 0.443137 0.737255 Xa
(R=0 G=113 B=188)
Pc
0.867521 0.720333 0.043702 0.004211 0.180392 0.192157 0.572549 Xa
(R=46 G=49 B=146)
Pc
0.928801 0.872343 0.208164 0.070649 0.105882 0.078431 0.392157 Xa
(R=27 G=20 B=100)
Pc
0.619898 0.779843 0.045655 0.007294 0.4 0.176471 0.568627 Xa
(R=102 G=45 B=145)
Pc
0.419623 0.838682 0.026795 0.00293 0.576471 0.152941 0.560784 Xa
(R=147 G=39 B=143)
Pc
0.309117 0.95874 0.221164 0.085145 0.619608 0 0.364706 Xa
(R=158 G=0 B=93)
Pc
0.122652 0.908202 0.324315 0.025391 0.831373 0.078431 0.352941 Xa
(R=212 G=20 B=90)
Pc
0.033265 0.915496 0.102327 0.004364 0.929412 0.117647 0.47451 Xa
(R=237 G=30 B=121)
Pc
0.183963 0.216983 0.281743 0.039979 0.780392 0.698039 0.6 Xa
(R=199 G=178 B=153)
Pc
0.325444 0.321172 0.366949 0.110689 0.6 0.52549 0.458824 Xa
(R=153 G=134 B=117)
Pc
0.426947 0.399695 0.442786 0.217838 0.45098 0.388235 0.341176 Xa
(R=115 G=99 B=87)
Pc
0.511101 0.464057 0.48835 0.342992 0.32549 0.278431 0.254902 Xa
(R=83 G=71 B=65)
Pc
0.179293 0.304906 0.464515 0.050752 0.776471 0.611765 0.427451 Xa
(R=198 G=156 B=109)
Pc
0.264561 0.383398 0.553338 0.113619 0.65098 0.486275 0.321569 Xa
(R=166 G=124 B=82)
Pc
0.320867 0.449439 0.657343 0.191623 0.54902 0.384314 0.223529 Xa
(R=140 G=98 B=57)
Pc
0.363043 0.508263 0.763851 0.279698 0.458824 0.298039 0.141176 Xa
(R=117 G=76 B=36)
Pc
0.390875 0.569085 0.860136 0.382696 0.376471 0.219608 0.07451 Xa
(R=96 G=56 B=19)
Pc
0.428199 0.645472 0.897429 0.547936 0.258824 0.129412 0.043137 Xa
(R=66 G=33 B=11)
Pc
Bb
2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(White, Black)
Pc
Bb
2 (Fade To Center Green) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade To Center Green)
Pc
Bb
2 (Purple, Orange) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Purple, Orange)
Pc
(Bugaboo) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Bugaboo)
Pc
0 0 0 1 0 0 0 Xa
(R=0 G=0 B=0)
Pc
0.684077 0.544915 0.559564 0.685817 0.101961 0.101961 0.101961 Xa
(R=26 G=26 B=26)
Pc
0.623896 0.484779 0.487892 0.478065 0.2 0.2 0.2 Xa
(R=51 G=51 B=51)
Pc
0.557305 0.422431 0.413428 0.325475 0.301961 0.301961 0.301961 Xa
(R=77 G=77 B=77)
Pc
0.491157 0.364691 0.345281 0.218082 0.4 0.4 0.4 Xa
(R=102 G=102 B=102)
Pc
0.425696 0.31046 0.283452 0.127047 0.501961 0.501961 0.501961 Xa
(R=128 G=128 B=128)
Pc
0.35465 0.254185 0.222782 0.068421 0.6 0.6 0.6 Xa
(R=153 G=153 B=153)
Pc
0.271763 0.191531 0.160128 0.03241 0.701961 0.701961 0.701961 Xa
(R=179 G=179 B=179)
Pc
0.186465 0.129366 0.102846 0.012604 0.8 0.8 0.8 Xa
(R=204 G=204 B=204)
Pc
0.093233 0.063569 0.047822 0.002655 0.901961 0.901961 0.901961 Xa
(R=230 G=230 B=230)
Pc
0.048371 0.032868 0.024475 0.001099 0.94902 0.94902 0.94902 Xa
(R=242 G=242 B=242)
Pc
0.452644 0.139528 0.990814 0.025544 0.533333 0.658824 0.05098 Xa
(R=136 G=168 B=13)
Pc
0.516258 0.674983 0 0 0.498039 0.278431 0.866667 Xa
(R=127 G=71 B=221)
Pc
0.026947 0.307683 0.912016 0.003052 0.984314 0.682353 0.090196 Xa
(R=251 G=174 B=23)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
LB
%AI5_EndLayer--
%AI5_BeginLayer
0 1 1 1 0 0 0 1 255 79 79 0 50 Lb
(Layer 2) Ln
0 A
0 O
0.059663 0.040528 0.030213 0.001343 0.937255 0.937255 0.937255 Xa
0 R
0.059663 0.040528 0.030213 0.001343 0.937255 0.937255 0.937255 XA
0 J 0 j 1 w 10 M []0 d0 XR
480 -353 m
0 -353 L
0 0 L
480 0 L
480 -353 L
b
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(Layer 2 copy) Ln
0 A
0 O
0.441627 0.175326 0.457435 0.040467 0.537255 0.647059 0.466667 Xa
0 R
0.059663 0.040528 0.030213 0.001343 0.937255 0.937255 0.937255 XA
0 J 0 j 1 w 10 M []0 d0 XR
480 -644 m
0 -644 L
0 0 L
480 0 L
480 -644 L
b
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 2 79 255 79 0 50 Lb
(Layer 3) Ln
0 A
0 O
0.568231 0.210361 0.657984 0.064027 0.407843 0.556863 0.313726 Xa
0 J 0 j 1 w 10 M []0 d0 XR
480 -313 m
480 -335 462 -353 440 -353 c
40 -353 l
18 -353 0 -335 0 -313 c
0 -40 l
0 -18 18 0 40 0 c
440 0 l
462 0 480 -18 480 -40 c
480 -313 l
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
0 1 1 1 0 0 0 5 79 255 255 0 50 Lb
(eyes) Ln
0 A
0 O
0 0 0 1 0 0 0 Xa
0 R
0 0 0 1 0 0 0 XA
0 J 0 j 1 w 10 M []0 d0 XR
96.5 -89 m
96.5 -97.2842 89.5605 -104 81 -104 c
72.4395 -104 65.5 -97.2842 65.5 -89 c
65.5 -80.7158 72.4395 -74 81 -74 c
89.5605 -74 96.5 -80.7158 96.5 -89 c
b
302.5 -89 m
302.5 -97.2842 295.5605 -104 287 -104 c
278.4395 -104 271.5 -97.2842 271.5 -89 c
271.5 -80.7158 278.4395 -74 287 -74 c
295.5605 -74 302.5 -80.7158 302.5 -89 c
b
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 5 79 255 255 0 50 Lb
(eyes copy) Ln
0 A
0 O
0 0 0 1 0 0 0 Xa
0 R
0 0 0 1 0 0 0 XA
0 J 0 j 1 w 10 M []0 d0 XR
96.5 -89 m
96.5 -97.2842 89.5605 -104 81 -104 c
72.4395 -104 65.5 -97.2842 65.5 -89 c
65.5 -80.7158 72.4395 -74 81 -74 c
89.5605 -74 96.5 -80.7158 96.5 -89 c
b
302.5 -89 m
302.5 -97.2842 295.5605 -104 287 -104 c
278.4395 -104 271.5 -97.2842 271.5 -89 c
271.5 -80.7158 278.4395 -74 287 -74 c
295.5605 -74 302.5 -80.7158 302.5 -89 c
b
0.568231 0.210361 0.657984 0.064027 0.407843 0.556863 0.313726 Xa
444 -83 m
32 -83 L
32 -36 L
444 -36 L
444 -83 L
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 4 255 79 255 0 50 Lb
(message box) Ln
0 A
0 O
0.000092 0 0.000031 0 1 1 1 Xa
0 J 0 j 1 w 10 M []0 d0 XR
310.5 -215.5 m
310.5 -217.709 308.709 -219.5 306.5 -219.5 C
78.5 -219.5 L
76.291 -219.5 74.5 -217.709 74.5 -215.5 C
74.5 -185 L
74.5 -182.791 76.291 -181 78.5 -181 C
306.5 -181 L
308.709 -181 310.5 -182.791 310.5 -185 C
310.5 -215.5 L
f
310.5 -330.6494 m
310.5 -340.2314 308.709 -348 306.5 -348 C
78.5 -348 L
76.291 -348 74.5 -340.2314 74.5 -330.6494 C
74.5 -198.3506 L
74.5 -188.7686 76.291 -181 78.5 -181 C
306.5 -181 L
308.709 -181 310.5 -188.7686 310.5 -198.3506 C
310.5 -330.6494 L
f
u
*u
0 Ap
0.277745 0.159976 0.20206 0.027283 0.701961 0.729412 0.682353 Xa
89.9375 -206 m
84.125 -190.8125 L
84.0313 -190.8125 L
84.1406 -192.0156 84.1953 -193.4453 84.1953 -195.1016 c
84.1953 -206 L
82.3555 -206 L
82.3555 -188.8672 L
85.3555 -188.8672 L
90.7813 -203 L
90.875 -203 L
96.3477 -188.8672 L
99.3242 -188.8672 L
99.3242 -206 L
97.332 -206 L
97.332 -194.9609 L
97.332 -193.6953 97.3867 -192.3203 97.4961 -190.8359 c
97.4023 -190.8359 L
91.543 -206 l
89.9375 -206 L
f
*U
*u
109.1563 -206.2344 m
107.2578 -206.2344 105.7598 -205.6563 104.6621 -204.5 c
103.5645 -203.3438 103.0156 -201.7383 103.0156 -199.6836 c
103.0156 -197.6133 103.5254 -195.9688 104.5449 -194.75 c
105.5645 -193.5313 106.9336 -192.9219 108.6523 -192.9219 c
110.2617 -192.9219 111.5352 -193.4512 112.4727 -194.5098 c
113.4102 -195.5684 113.8789 -196.9648 113.8789 -198.6992 c
113.8789 -199.9297 L
105.0313 -199.9297 L
105.0703 -201.4375 105.4512 -202.582 106.1738 -203.3633 c
106.8965 -204.1445 107.9141 -204.5352 109.2266 -204.5352 c
110.6094 -204.5352 111.9766 -204.2461 113.3281 -203.668 c
113.3281 -205.4023 L
112.6406 -205.6992 111.9902 -205.9121 111.377 -206.041 c
110.7637 -206.1699 110.0234 -206.2344 109.1563 -206.2344 c
f
1 D
108.6289 -194.5508 m
107.5977 -194.5508 106.7754 -194.8867 106.1621 -195.5586 c
105.5488 -196.2305 105.1875 -197.1602 105.0781 -198.3477 c
111.793 -198.3477 L
111.793 -197.1211 111.5195 -196.1816 110.9727 -195.5293 c
110.4258 -194.877 109.6445 -194.5508 108.6289 -194.5508 c
f
*U
*u
0 D
125.4805 -202.4961 m
125.4805 -203.6914 125.0352 -204.6133 124.1445 -205.2617 c
123.2539 -205.9102 122.0039 -206.2344 120.3945 -206.2344 c
118.6914 -206.2344 117.3633 -205.9648 116.4102 -205.4258 c
116.4102 -203.6211 L
117.0273 -203.9336 117.6895 -204.1797 118.3965 -204.3594 c
119.1035 -204.5391 119.7852 -204.6289 120.4414 -204.6289 c
121.457 -204.6289 122.2383 -204.4668 122.7852 -204.1426 c
123.332 -203.8184 123.6055 -203.3242 123.6055 -202.6602 c
123.6055 -202.1602 123.3887 -201.7324 122.9551 -201.377 c
122.5215 -201.0215 121.6758 -200.6016 120.418 -200.1172 c
119.2227 -199.6719 118.373 -199.2832 117.8691 -198.9512 c
117.3652 -198.6191 116.9902 -198.2422 116.7441 -197.8203 c
116.498 -197.3984 116.375 -196.8945 116.375 -196.3086 c
116.375 -195.2617 116.8008 -194.4355 117.6523 -193.8301 c
118.5039 -193.2246 119.6719 -192.9219 121.1563 -192.9219 c
122.5391 -192.9219 123.8906 -193.2031 125.2109 -193.7656 c
124.5195 -195.3477 L
123.2305 -194.8164 122.0625 -194.5508 121.0156 -194.5508 c
120.0938 -194.5508 119.3984 -194.6953 118.9297 -194.9844 c
118.4609 -195.2734 118.2266 -195.6719 118.2266 -196.1797 c
118.2266 -196.5234 118.3145 -196.8164 118.4902 -197.0586 c
118.666 -197.3008 118.9492 -197.5313 119.3398 -197.75 c
119.7305 -197.9688 120.4805 -198.2852 121.5898 -198.6992 c
123.1133 -199.2539 124.1426 -199.8125 124.6777 -200.375 c
125.2129 -200.9375 125.4805 -201.6445 125.4805 -202.4961 c
f
*U
*u
136.9297 -202.4961 m
136.9297 -203.6914 136.4844 -204.6133 135.5938 -205.2617 c
134.7031 -205.9102 133.4531 -206.2344 131.8438 -206.2344 c
130.1406 -206.2344 128.8125 -205.9648 127.8594 -205.4258 c
127.8594 -203.6211 L
128.4766 -203.9336 129.1387 -204.1797 129.8457 -204.3594 c
130.5527 -204.5391 131.2344 -204.6289 131.8906 -204.6289 c
132.9063 -204.6289 133.6875 -204.4668 134.2344 -204.1426 c
134.7813 -203.8184 135.0547 -203.3242 135.0547 -202.6602 c
135.0547 -202.1602 134.8379 -201.7324 134.4043 -201.377 c
133.9707 -201.0215 133.125 -200.6016 131.8672 -200.1172 c
130.6719 -199.6719 129.8223 -199.2832 129.3184 -198.9512 c
128.8145 -198.6191 128.4395 -198.2422 128.1934 -197.8203 c
127.9473 -197.3984 127.8242 -196.8945 127.8242 -196.3086 c
127.8242 -195.2617 128.25 -194.4355 129.1016 -193.8301 c
129.9531 -193.2246 131.1211 -192.9219 132.6055 -192.9219 c
133.9883 -192.9219 135.3398 -193.2031 136.6602 -193.7656 c
135.9688 -195.3477 L
134.6797 -194.8164 133.5117 -194.5508 132.4648 -194.5508 c
131.543 -194.5508 130.8477 -194.6953 130.3789 -194.9844 c
129.9102 -195.2734 129.6758 -195.6719 129.6758 -196.1797 c
129.6758 -196.5234 129.7637 -196.8164 129.9395 -197.0586 c
130.1152 -197.3008 130.3984 -197.5313 130.7891 -197.75 c
131.1797 -197.9688 131.9297 -198.2852 133.0391 -198.6992 c
134.5625 -199.2539 135.5918 -199.8125 136.127 -200.375 c
136.6621 -200.9375 136.9297 -201.6445 136.9297 -202.4961 c
f
*U
*u
147.9922 -206 m
147.6055 -204.1719 L
147.5117 -204.1719 L
146.8711 -204.9766 146.2324 -205.5215 145.5957 -205.8066 c
144.959 -206.0918 144.1641 -206.2344 143.2109 -206.2344 c
141.9375 -206.2344 140.9395 -205.9063 140.2168 -205.25 c
139.4941 -204.5938 139.1328 -203.6602 139.1328 -202.4492 c
139.1328 -199.8555 141.207 -198.4961 145.3555 -198.3711 c
147.5352 -198.3008 L
147.5352 -197.5039 L
147.5352 -196.4961 147.3184 -195.752 146.8848 -195.2715 c
146.4512 -194.791 145.7578 -194.5508 144.8047 -194.5508 c
143.7344 -194.5508 142.5234 -194.8789 141.1719 -195.5352 c
140.5742 -194.0469 L
141.207 -193.7031 141.9004 -193.4336 142.6543 -193.2383 c
143.4082 -193.043 144.1641 -192.9453 144.9219 -192.9453 c
146.4531 -192.9453 147.5879 -193.2852 148.3262 -193.9648 c
149.0645 -194.6445 149.4336 -195.7344 149.4336 -197.2344 c
149.4336 -206 l
147.9922 -206 L
f
1 D
143.5977 -204.6289 m
144.8086 -204.6289 145.7598 -204.2969 146.4512 -203.6328 c
147.1426 -202.9688 147.4883 -202.0391 147.4883 -200.8438 c
147.4883 -199.6836 L
145.543 -199.7656 L
143.9961 -199.8203 142.8809 -200.0605 142.1973 -200.4863 c
141.5137 -200.9121 141.1719 -201.5742 141.1719 -202.4727 c
141.1719 -203.1758 141.3848 -203.7109 141.8105 -204.0781 c
142.2363 -204.4453 142.832 -204.6289 143.5977 -204.6289 c
f
*U
*u
0 D
163.9531 -193.1563 m
163.9531 -194.3867 L
161.5742 -194.668 L
161.793 -194.9414 161.9883 -195.2988 162.1602 -195.7402 c
162.332 -196.1816 162.418 -196.6797 162.418 -197.2344 c
162.418 -198.4922 161.9883 -199.4961 161.1289 -200.2461 c
160.2695 -200.9961 159.0898 -201.3711 157.5898 -201.3711 c
157.207 -201.3711 156.8477 -201.3398 156.5117 -201.2773 c
155.6836 -201.7148 155.2695 -202.2656 155.2695 -202.9297 c
155.2695 -203.2813 155.4141 -203.541 155.7031 -203.709 c
155.9922 -203.877 156.4883 -203.9609 157.1914 -203.9609 c
159.4648 -203.9609 L
160.8555 -203.9609 161.9238 -204.2539 162.6699 -204.8398 c
163.416 -205.4258 163.7891 -206.2773 163.7891 -207.3945 c
163.7891 -208.8164 163.2188 -209.9004 162.0781 -210.6465 c
160.9375 -211.3926 159.2734 -211.7656 157.0859 -211.7656 c
155.4063 -211.7656 154.1113 -211.4531 153.2012 -210.8281 c
152.291 -210.2031 151.8359 -209.3203 151.8359 -208.1797 c
151.8359 -207.3984 152.0859 -206.7227 152.5859 -206.1523 c
153.0859 -205.582 153.7891 -205.1953 154.6953 -204.9922 c
154.3672 -204.8438 154.0918 -204.6133 153.8691 -204.3008 c
153.6465 -203.9883 153.5352 -203.625 153.5352 -203.2109 c
153.5352 -202.7422 153.6602 -202.332 153.9102 -201.9805 c
154.1602 -201.6289 154.5547 -201.2891 155.0938 -200.9609 c
154.4297 -200.6875 153.8887 -200.2227 153.4707 -199.5664 c
153.0527 -198.9102 152.8438 -198.1602 152.8438 -197.3164 c
152.8438 -195.9102 153.2656 -194.8262 154.1094 -194.0645 c
154.9531 -193.3027 156.1484 -192.9219 157.6953 -192.9219 c
158.3672 -192.9219 158.9727 -193 159.5117 -193.1563 c
163.9531 -193.1563 L
f
1 D
153.7109 -208.1563 m
153.7109 -208.8516 154.0039 -209.3789 154.5898 -209.7383 c
155.1758 -210.0977 156.0156 -210.2773 157.1094 -210.2773 c
158.7422 -210.2773 159.9512 -210.0332 160.7363 -209.5449 c
161.5215 -209.0566 161.9141 -208.3945 161.9141 -207.5586 c
161.9141 -206.8633 161.6992 -206.3809 161.2695 -206.1113 c
160.8398 -205.8418 160.0313 -205.707 158.8438 -205.707 c
156.5117 -205.707 L
155.6289 -205.707 154.9414 -205.918 154.4492 -206.3398 c
153.957 -206.7617 153.7109 -207.3672 153.7109 -208.1563 c
f
154.7656 -197.2695 m
154.7656 -198.168 155.0195 -198.8477 155.5273 -199.3086 c
156.0352 -199.7695 156.7422 -200 157.6484 -200 c
159.5469 -200 160.4961 -199.0781 160.4961 -197.2344 c
160.4961 -195.3047 159.5352 -194.3398 157.6133 -194.3398 c
156.6992 -194.3398 155.9961 -194.5859 155.5039 -195.0781 c
155.0117 -195.5703 154.7656 -196.3008 154.7656 -197.2695 c
f
*U
*u
0 D
172.0156 -206.2344 m
170.1172 -206.2344 168.6191 -205.6563 167.5215 -204.5 c
166.4238 -203.3438 165.875 -201.7383 165.875 -199.6836 c
165.875 -197.6133 166.3848 -195.9688 167.4043 -194.75 c
168.4238 -193.5313 169.793 -192.9219 171.5117 -192.9219 c
173.1211 -192.9219 174.3945 -193.4512 175.332 -194.5098 c
176.2695 -195.5684 176.7383 -196.9648 176.7383 -198.6992 c
176.7383 -199.9297 L
167.8906 -199.9297 L
167.9297 -201.4375 168.3105 -202.582 169.0332 -203.3633 c
169.7559 -204.1445 170.7734 -204.5352 172.0859 -204.5352 c
173.4688 -204.5352 174.8359 -204.2461 176.1875 -203.668 c
176.1875 -205.4023 L
175.5 -205.6992 174.8496 -205.9121 174.2363 -206.041 c
173.623 -206.1699 172.8828 -206.2344 172.0156 -206.2344 c
f
1 D
171.4883 -194.5508 m
170.457 -194.5508 169.6348 -194.8867 169.0215 -195.5586 c
168.4082 -196.2305 168.0469 -197.1602 167.9375 -198.3477 c
174.6523 -198.3477 L
174.6523 -197.1211 174.3789 -196.1816 173.832 -195.5293 c
173.2852 -194.877 172.5039 -194.5508 171.4883 -194.5508 c
f
*U
*u
0 D
179.7734 -194.4102 m
179.7734 -193.3555 180.2344 -192.8281 181.1563 -192.8281 c
182.1172 -192.8281 182.5977 -193.3555 182.5977 -194.4102 c
182.5977 -194.918 182.4688 -195.3086 182.2109 -195.582 c
181.9531 -195.8555 181.6016 -195.9922 181.1563 -195.9922 c
180.7578 -195.9922 180.4277 -195.8691 180.166 -195.623 c
179.9043 -195.377 179.7734 -194.9727 179.7734 -194.4102 c
f
179.7734 -204.7578 m
179.7734 -204.2344 179.8926 -203.8379 180.1309 -203.5684 c
180.3691 -203.2988 180.7109 -203.1641 181.1563 -203.1641 c
181.6094 -203.1641 181.9629 -203.2988 182.2168 -203.5684 c
182.4707 -203.8379 182.5977 -204.2344 182.5977 -204.7578 c
182.5977 -205.2656 182.4688 -205.6563 182.2109 -205.9297 c
181.9531 -206.2031 181.6016 -206.3398 181.1563 -206.3398 c
180.7578 -206.3398 180.4277 -206.2168 180.166 -205.9707 c
179.9043 -205.7246 179.7734 -205.3203 179.7734 -204.7578 c
f
*U
U

LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 7 128 128 128 0 50 Lb
(Layer 8) Ln
0 A
u
*u
0 O
0.361456 0.091737 0.592523 0.013703 0.631373 0.756863 0.396078 Xa
0 J 0 j 1 w 10 M []0 d0 XR
378.8457 -182 m
349.4023 -182 L
349.4023 -178.1035 L
372.1367 -143.6504 L
350.1055 -143.6504 L
350.1055 -139.168 L
378.2012 -139.168 L
378.2012 -143.0645 L
355.4668 -177.4883 L
378.8457 -177.4883 l
378.8457 -182 L
f
*U
U

u
*u
430.8457 -114 m
401.4023 -114 L
401.4023 -110.1035 L
424.1367 -75.6504 L
402.1055 -75.6504 L
402.1055 -71.168 L
430.2012 -71.168 L
430.2012 -75.0645 L
407.4668 -109.4883 L
430.8457 -109.4883 l
430.8457 -114 L
f
*U
U

LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 8 0 0 0 0 50 Lb
(Layer 9) Ln
0 A
1 Ap
0 O
0.196902 0.136873 0.109529 0.014435 0.788235 0.788235 0.788235 Xa
0 J 0 j 1 w 10 M []0 d0 XR
427 -424.4727 m
427 -425.3164 426.3164 -426 425.4727 -426 C
50.5273 -426 L
49.6841 -426 49 -425.3164 49 -424.4727 C
49 -378.6543 L
49 -377.8115 49.6841 -377.127 50.5273 -377.127 C
425.4727 -377.127 L
426.3164 -377.127 427 -377.8115 427 -378.6543 C
427 -424.4727 L
f
u
*u
0 Ap
0 0 0 1 0 0 0 Xa
4 M205.0313 -404.1719 m
205.0313 -406.1826 204.3018 -407.75 202.8438 -408.875 c
201.3853 -410 199.4063 -410.5625 196.9063 -410.5625 c
194.1978 -410.5625 192.1143 -410.2139 190.6563 -409.5156 c
190.6563 -406.9531 L
191.5938 -407.3496 192.6143 -407.6621 193.7188 -407.8906 c
194.8228 -408.1201 195.9165 -408.2344 197 -408.2344 c
198.7705 -408.2344 200.104 -407.8984 201 -407.2266 c
201.8955 -406.5547 202.3438 -405.6201 202.3438 -404.4219 c
202.3438 -403.6309 202.1846 -402.9824 201.8672 -402.4766 c
201.5493 -401.9717 201.0181 -401.5059 200.2734 -401.0781 c
199.5283 -400.6514 198.3955 -400.167 196.875 -399.625 c
194.75 -398.8652 193.2314 -397.9639 192.3203 -396.9219 c
191.4087 -395.8809 190.9531 -394.5215 190.9531 -392.8438 c
190.9531 -391.084 191.6143 -389.6826 192.9375 -388.6406 c
194.2603 -387.5996 196.0103 -387.0781 198.1875 -387.0781 c
200.458 -387.0781 202.5469 -387.4951 204.4531 -388.3281 c
203.625 -390.6406 L
201.7393 -389.8496 199.9063 -389.4531 198.125 -389.4531 c
196.7188 -389.4531 195.6196 -389.7559 194.8281 -390.3594 c
194.0361 -390.9639 193.6406 -391.8027 193.6406 -392.875 c
193.6406 -393.667 193.7861 -394.3154 194.0781 -394.8203 c
194.3696 -395.3262 194.8618 -395.7891 195.5547 -396.2109 c
196.2471 -396.6328 197.3071 -397.0996 198.7344 -397.6094 c
201.1299 -398.4639 202.7783 -399.3809 203.6797 -400.3594 c
204.5806 -401.3389 205.0313 -402.6094 205.0313 -404.1719 c
f
*U
*u
216.5469 -410.5625 m
214.0156 -410.5625 212.0181 -409.792 210.5547 -408.25 c
209.0908 -406.709 208.3594 -404.5684 208.3594 -401.8281 c
208.3594 -399.0684 209.0391 -396.875 210.3984 -395.25 c
211.7578 -393.625 213.583 -392.8125 215.875 -392.8125 c
218.0205 -392.8125 219.7188 -393.5186 220.9688 -394.9297 c
222.2188 -396.3418 222.8438 -398.2031 222.8438 -400.5156 c
222.8438 -402.1563 L
211.0469 -402.1563 L
211.0986 -404.167 211.6064 -405.6934 212.5703 -406.7344 c
213.5337 -407.7764 214.8906 -408.2969 216.6406 -408.2969 c
218.4844 -408.2969 220.3071 -407.9121 222.1094 -407.1406 c
222.1094 -409.4531 L
221.1924 -409.8496 220.3252 -410.1328 219.5078 -410.3047 c
218.6899 -410.4766 217.7031 -410.5625 216.5469 -410.5625 c
f
1 D
215.8438 -394.9844 m
214.4688 -394.9844 213.3721 -395.4326 212.5547 -396.3281 c
211.7368 -397.2246 211.2549 -398.4639 211.1094 -400.0469 c
220.0625 -400.0469 L
220.0625 -398.4121 219.6978 -397.1592 218.9688 -396.2891 c
218.2393 -395.4199 217.1978 -394.9844 215.8438 -394.9844 c
f
*U
*u
0 D
238.9844 -410.25 m
238.9844 -399.1719 L
238.9844 -397.7764 238.6665 -396.7344 238.0313 -396.0469 c
237.3955 -395.3594 236.4009 -395.0156 235.0469 -395.0156 c
233.2549 -395.0156 231.9424 -395.5 231.1094 -396.4688 c
230.2759 -397.4375 229.8594 -399.0371 229.8594 -401.2656 c
229.8594 -410.25 L
227.2656 -410.25 L
227.2656 -393.125 L
229.375 -393.125 L
229.7969 -395.4688 L
229.9219 -395.4688 L
230.4531 -394.625 231.1978 -393.9717 232.1563 -393.5078 c
233.1143 -393.0449 234.1821 -392.8125 235.3594 -392.8125 c
237.4219 -392.8125 238.9736 -393.3105 240.0156 -394.3047 c
241.0566 -395.2998 241.5781 -396.8906 241.5781 -399.0781 c
241.5781 -410.25 l
238.9844 -410.25 L
f
*U
*u
258.5625 -407.9531 m
258.4219 -407.9531 L
257.2236 -409.6934 255.4316 -410.5625 253.0469 -410.5625 c
250.8066 -410.5625 249.0645 -409.7969 247.8203 -408.2656 c
246.5752 -406.7344 245.9531 -404.5576 245.9531 -401.7344 c
245.9531 -398.9121 246.5781 -396.7188 247.8281 -395.1563 c
249.0781 -393.5938 250.8174 -392.8125 253.0469 -392.8125 c
255.3691 -392.8125 257.1504 -393.6563 258.3906 -395.3438 c
258.5938 -395.3438 L
258.4844 -394.1094 L
258.4219 -392.9063 L
258.4219 -385.9375 L
261.0156 -385.9375 L
261.0156 -410.25 L
258.9063 -410.25 l
258.5625 -407.9531 L
f
1 D
253.375 -408.3906 m
255.1455 -408.3906 256.4297 -407.9092 257.2266 -406.9453 c
258.0234 -405.9824 258.4219 -404.4277 258.4219 -402.2813 c
258.4219 -401.7344 L
258.4219 -399.3076 258.0176 -397.5762 257.2109 -396.5391 c
256.4033 -395.5029 255.1143 -394.9844 253.3438 -394.9844 c
251.8223 -394.9844 250.6582 -395.5762 249.8516 -396.7578 c
249.0439 -397.9404 248.6406 -399.6094 248.6406 -401.7656 c
248.6406 -403.9531 249.041 -405.6045 249.8438 -406.7188 c
250.6455 -407.834 251.8223 -408.3906 253.375 -408.3906 c
f
*U
U

1 Ap
0 D
0.314305 0.207309 0.207248 0.043214 0.654902 0.666667 0.647059 Xa
10 M427 -426 m
49 -426 L
49 -422 L
427 -422 L
427 -426 L
f
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
